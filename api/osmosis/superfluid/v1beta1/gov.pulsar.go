// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package superfluidv1beta1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/gogo/protobuf/gogoproto"
	superfluid "github.com/osmosis-labs/osmosis/api/osmosis/superfluid"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_SetSuperfluidAssetsProposal_3_list)(nil)

type _SetSuperfluidAssetsProposal_3_list struct {
	list *[]*superfluid.SuperfluidAsset
}

func (x *_SetSuperfluidAssetsProposal_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SetSuperfluidAssetsProposal_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_SetSuperfluidAssetsProposal_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*superfluid.SuperfluidAsset)
	(*x.list)[i] = concreteValue
}

func (x *_SetSuperfluidAssetsProposal_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*superfluid.SuperfluidAsset)
	*x.list = append(*x.list, concreteValue)
}

func (x *_SetSuperfluidAssetsProposal_3_list) AppendMutable() protoreflect.Value {
	v := new(superfluid.SuperfluidAsset)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SetSuperfluidAssetsProposal_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_SetSuperfluidAssetsProposal_3_list) NewElement() protoreflect.Value {
	v := new(superfluid.SuperfluidAsset)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SetSuperfluidAssetsProposal_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_SetSuperfluidAssetsProposal             protoreflect.MessageDescriptor
	fd_SetSuperfluidAssetsProposal_title       protoreflect.FieldDescriptor
	fd_SetSuperfluidAssetsProposal_description protoreflect.FieldDescriptor
	fd_SetSuperfluidAssetsProposal_assets      protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_superfluid_v1beta1_gov_proto_init()
	md_SetSuperfluidAssetsProposal = File_osmosis_superfluid_v1beta1_gov_proto.Messages().ByName("SetSuperfluidAssetsProposal")
	fd_SetSuperfluidAssetsProposal_title = md_SetSuperfluidAssetsProposal.Fields().ByName("title")
	fd_SetSuperfluidAssetsProposal_description = md_SetSuperfluidAssetsProposal.Fields().ByName("description")
	fd_SetSuperfluidAssetsProposal_assets = md_SetSuperfluidAssetsProposal.Fields().ByName("assets")
}

var _ protoreflect.Message = (*fastReflection_SetSuperfluidAssetsProposal)(nil)

type fastReflection_SetSuperfluidAssetsProposal SetSuperfluidAssetsProposal

func (x *SetSuperfluidAssetsProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetSuperfluidAssetsProposal)(x)
}

func (x *SetSuperfluidAssetsProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_superfluid_v1beta1_gov_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetSuperfluidAssetsProposal_messageType fastReflection_SetSuperfluidAssetsProposal_messageType
var _ protoreflect.MessageType = fastReflection_SetSuperfluidAssetsProposal_messageType{}

type fastReflection_SetSuperfluidAssetsProposal_messageType struct{}

func (x fastReflection_SetSuperfluidAssetsProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetSuperfluidAssetsProposal)(nil)
}
func (x fastReflection_SetSuperfluidAssetsProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_SetSuperfluidAssetsProposal)
}
func (x fastReflection_SetSuperfluidAssetsProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetSuperfluidAssetsProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetSuperfluidAssetsProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_SetSuperfluidAssetsProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetSuperfluidAssetsProposal) Type() protoreflect.MessageType {
	return _fastReflection_SetSuperfluidAssetsProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetSuperfluidAssetsProposal) New() protoreflect.Message {
	return new(fastReflection_SetSuperfluidAssetsProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetSuperfluidAssetsProposal) Interface() protoreflect.ProtoMessage {
	return (*SetSuperfluidAssetsProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetSuperfluidAssetsProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_SetSuperfluidAssetsProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_SetSuperfluidAssetsProposal_description, value) {
			return
		}
	}
	if len(x.Assets) != 0 {
		value := protoreflect.ValueOfList(&_SetSuperfluidAssetsProposal_3_list{list: &x.Assets})
		if !f(fd_SetSuperfluidAssetsProposal_assets, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetSuperfluidAssetsProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.title":
		return x.Title != ""
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.description":
		return x.Description != ""
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.assets":
		return len(x.Assets) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetSuperfluidAssetsProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.title":
		x.Title = ""
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.description":
		x.Description = ""
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.assets":
		x.Assets = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetSuperfluidAssetsProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.assets":
		if len(x.Assets) == 0 {
			return protoreflect.ValueOfList(&_SetSuperfluidAssetsProposal_3_list{})
		}
		listValue := &_SetSuperfluidAssetsProposal_3_list{list: &x.Assets}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetSuperfluidAssetsProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.title":
		x.Title = value.Interface().(string)
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.description":
		x.Description = value.Interface().(string)
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.assets":
		lv := value.List()
		clv := lv.(*_SetSuperfluidAssetsProposal_3_list)
		x.Assets = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetSuperfluidAssetsProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.assets":
		if x.Assets == nil {
			x.Assets = []*superfluid.SuperfluidAsset{}
		}
		value := &_SetSuperfluidAssetsProposal_3_list{list: &x.Assets}
		return protoreflect.ValueOfList(value)
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.title":
		panic(fmt.Errorf("field title of message osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal is not mutable"))
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.description":
		panic(fmt.Errorf("field description of message osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetSuperfluidAssetsProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.title":
		return protoreflect.ValueOfString("")
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.description":
		return protoreflect.ValueOfString("")
	case "osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.assets":
		list := []*superfluid.SuperfluidAsset{}
		return protoreflect.ValueOfList(&_SetSuperfluidAssetsProposal_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetSuperfluidAssetsProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetSuperfluidAssetsProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetSuperfluidAssetsProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetSuperfluidAssetsProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetSuperfluidAssetsProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetSuperfluidAssetsProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Assets) > 0 {
			for _, e := range x.Assets {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetSuperfluidAssetsProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Assets) > 0 {
			for iNdEx := len(x.Assets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Assets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetSuperfluidAssetsProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetSuperfluidAssetsProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetSuperfluidAssetsProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Assets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Assets = append(x.Assets, &superfluid.SuperfluidAsset{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Assets[len(x.Assets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_RemoveSuperfluidAssetsProposal_3_list)(nil)

type _RemoveSuperfluidAssetsProposal_3_list struct {
	list *[]string
}

func (x *_RemoveSuperfluidAssetsProposal_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_RemoveSuperfluidAssetsProposal_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_RemoveSuperfluidAssetsProposal_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_RemoveSuperfluidAssetsProposal_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_RemoveSuperfluidAssetsProposal_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message RemoveSuperfluidAssetsProposal at list field SuperfluidAssetDenoms as it is not of Message kind"))
}

func (x *_RemoveSuperfluidAssetsProposal_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_RemoveSuperfluidAssetsProposal_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_RemoveSuperfluidAssetsProposal_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_RemoveSuperfluidAssetsProposal                         protoreflect.MessageDescriptor
	fd_RemoveSuperfluidAssetsProposal_title                   protoreflect.FieldDescriptor
	fd_RemoveSuperfluidAssetsProposal_description             protoreflect.FieldDescriptor
	fd_RemoveSuperfluidAssetsProposal_superfluid_asset_denoms protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_superfluid_v1beta1_gov_proto_init()
	md_RemoveSuperfluidAssetsProposal = File_osmosis_superfluid_v1beta1_gov_proto.Messages().ByName("RemoveSuperfluidAssetsProposal")
	fd_RemoveSuperfluidAssetsProposal_title = md_RemoveSuperfluidAssetsProposal.Fields().ByName("title")
	fd_RemoveSuperfluidAssetsProposal_description = md_RemoveSuperfluidAssetsProposal.Fields().ByName("description")
	fd_RemoveSuperfluidAssetsProposal_superfluid_asset_denoms = md_RemoveSuperfluidAssetsProposal.Fields().ByName("superfluid_asset_denoms")
}

var _ protoreflect.Message = (*fastReflection_RemoveSuperfluidAssetsProposal)(nil)

type fastReflection_RemoveSuperfluidAssetsProposal RemoveSuperfluidAssetsProposal

func (x *RemoveSuperfluidAssetsProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RemoveSuperfluidAssetsProposal)(x)
}

func (x *RemoveSuperfluidAssetsProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_superfluid_v1beta1_gov_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RemoveSuperfluidAssetsProposal_messageType fastReflection_RemoveSuperfluidAssetsProposal_messageType
var _ protoreflect.MessageType = fastReflection_RemoveSuperfluidAssetsProposal_messageType{}

type fastReflection_RemoveSuperfluidAssetsProposal_messageType struct{}

func (x fastReflection_RemoveSuperfluidAssetsProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RemoveSuperfluidAssetsProposal)(nil)
}
func (x fastReflection_RemoveSuperfluidAssetsProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_RemoveSuperfluidAssetsProposal)
}
func (x fastReflection_RemoveSuperfluidAssetsProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RemoveSuperfluidAssetsProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_RemoveSuperfluidAssetsProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) Type() protoreflect.MessageType {
	return _fastReflection_RemoveSuperfluidAssetsProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) New() protoreflect.Message {
	return new(fastReflection_RemoveSuperfluidAssetsProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) Interface() protoreflect.ProtoMessage {
	return (*RemoveSuperfluidAssetsProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_RemoveSuperfluidAssetsProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_RemoveSuperfluidAssetsProposal_description, value) {
			return
		}
	}
	if len(x.SuperfluidAssetDenoms) != 0 {
		value := protoreflect.ValueOfList(&_RemoveSuperfluidAssetsProposal_3_list{list: &x.SuperfluidAssetDenoms})
		if !f(fd_RemoveSuperfluidAssetsProposal_superfluid_asset_denoms, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.title":
		return x.Title != ""
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.description":
		return x.Description != ""
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.superfluid_asset_denoms":
		return len(x.SuperfluidAssetDenoms) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.title":
		x.Title = ""
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.description":
		x.Description = ""
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.superfluid_asset_denoms":
		x.SuperfluidAssetDenoms = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.superfluid_asset_denoms":
		if len(x.SuperfluidAssetDenoms) == 0 {
			return protoreflect.ValueOfList(&_RemoveSuperfluidAssetsProposal_3_list{})
		}
		listValue := &_RemoveSuperfluidAssetsProposal_3_list{list: &x.SuperfluidAssetDenoms}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.title":
		x.Title = value.Interface().(string)
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.description":
		x.Description = value.Interface().(string)
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.superfluid_asset_denoms":
		lv := value.List()
		clv := lv.(*_RemoveSuperfluidAssetsProposal_3_list)
		x.SuperfluidAssetDenoms = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.superfluid_asset_denoms":
		if x.SuperfluidAssetDenoms == nil {
			x.SuperfluidAssetDenoms = []string{}
		}
		value := &_RemoveSuperfluidAssetsProposal_3_list{list: &x.SuperfluidAssetDenoms}
		return protoreflect.ValueOfList(value)
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.title":
		panic(fmt.Errorf("field title of message osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal is not mutable"))
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.description":
		panic(fmt.Errorf("field description of message osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.title":
		return protoreflect.ValueOfString("")
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.description":
		return protoreflect.ValueOfString("")
	case "osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal.superfluid_asset_denoms":
		list := []string{}
		return protoreflect.ValueOfList(&_RemoveSuperfluidAssetsProposal_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal"))
		}
		panic(fmt.Errorf("message osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RemoveSuperfluidAssetsProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RemoveSuperfluidAssetsProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.SuperfluidAssetDenoms) > 0 {
			for _, s := range x.SuperfluidAssetDenoms {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RemoveSuperfluidAssetsProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SuperfluidAssetDenoms) > 0 {
			for iNdEx := len(x.SuperfluidAssetDenoms) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.SuperfluidAssetDenoms[iNdEx])
				copy(dAtA[i:], x.SuperfluidAssetDenoms[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SuperfluidAssetDenoms[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RemoveSuperfluidAssetsProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RemoveSuperfluidAssetsProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RemoveSuperfluidAssetsProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SuperfluidAssetDenoms", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SuperfluidAssetDenoms = append(x.SuperfluidAssetDenoms, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: osmosis/superfluid/v1beta1/gov.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SetSuperfluidAssetsProposal is a gov Content type to update the superfluid
// assets
type SetSuperfluidAssetsProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string                        `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Assets      []*superfluid.SuperfluidAsset `protobuf:"bytes,3,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *SetSuperfluidAssetsProposal) Reset() {
	*x = SetSuperfluidAssetsProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_superfluid_v1beta1_gov_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSuperfluidAssetsProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSuperfluidAssetsProposal) ProtoMessage() {}

// Deprecated: Use SetSuperfluidAssetsProposal.ProtoReflect.Descriptor instead.
func (*SetSuperfluidAssetsProposal) Descriptor() ([]byte, []int) {
	return file_osmosis_superfluid_v1beta1_gov_proto_rawDescGZIP(), []int{0}
}

func (x *SetSuperfluidAssetsProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetSuperfluidAssetsProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SetSuperfluidAssetsProposal) GetAssets() []*superfluid.SuperfluidAsset {
	if x != nil {
		return x.Assets
	}
	return nil
}

// RemoveSuperfluidAssetsProposal is a gov Content type to remove the superfluid
// assets by denom
type RemoveSuperfluidAssetsProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                 string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description           string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	SuperfluidAssetDenoms []string `protobuf:"bytes,3,rep,name=superfluid_asset_denoms,json=superfluidAssetDenoms,proto3" json:"superfluid_asset_denoms,omitempty"`
}

func (x *RemoveSuperfluidAssetsProposal) Reset() {
	*x = RemoveSuperfluidAssetsProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_superfluid_v1beta1_gov_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSuperfluidAssetsProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSuperfluidAssetsProposal) ProtoMessage() {}

// Deprecated: Use RemoveSuperfluidAssetsProposal.ProtoReflect.Descriptor instead.
func (*RemoveSuperfluidAssetsProposal) Descriptor() ([]byte, []int) {
	return file_osmosis_superfluid_v1beta1_gov_proto_rawDescGZIP(), []int{1}
}

func (x *RemoveSuperfluidAssetsProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RemoveSuperfluidAssetsProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RemoveSuperfluidAssetsProposal) GetSuperfluidAssetDenoms() []string {
	if x != nil {
		return x.SuperfluidAssetDenoms
	}
	return nil
}

var File_osmosis_superfluid_v1beta1_gov_proto protoreflect.FileDescriptor

var file_osmosis_superfluid_v1beta1_gov_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x66,
	0x6c, 0x75, 0x69, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x67, 0x6f, 0x76,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x2f, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x01,
	0x0a, 0x1b, 0x53, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x66, 0x6c, 0x75, 0x69, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x3a, 0x0c, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0,
	0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x01, 0x22, 0x9e, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x15, 0x73, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x73, 0x3a, 0x0c, 0x88, 0xa0, 0x1f, 0x00, 0x98,
	0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x01, 0x42, 0x86, 0x02, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75,
	0x69, 0x64, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x08, 0x47, 0x6f, 0x76, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x69, 0x73, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69,
	0x64, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4f, 0x53, 0x58, 0xaa, 0x02,
	0x1a, 0x4f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c,
	0x75, 0x69, 0x64, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x1a, 0x4f, 0x73,
	0x6d, 0x6f, 0x73, 0x69, 0x73, 0x5c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64,
	0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x26, 0x4f, 0x73, 0x6d, 0x6f, 0x73,
	0x69, 0x73, 0x5c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x5c, 0x56, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x1c, 0x4f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x3a, 0x3a, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x66, 0x6c, 0x75, 0x69, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_osmosis_superfluid_v1beta1_gov_proto_rawDescOnce sync.Once
	file_osmosis_superfluid_v1beta1_gov_proto_rawDescData = file_osmosis_superfluid_v1beta1_gov_proto_rawDesc
)

func file_osmosis_superfluid_v1beta1_gov_proto_rawDescGZIP() []byte {
	file_osmosis_superfluid_v1beta1_gov_proto_rawDescOnce.Do(func() {
		file_osmosis_superfluid_v1beta1_gov_proto_rawDescData = protoimpl.X.CompressGZIP(file_osmosis_superfluid_v1beta1_gov_proto_rawDescData)
	})
	return file_osmosis_superfluid_v1beta1_gov_proto_rawDescData
}

var file_osmosis_superfluid_v1beta1_gov_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_osmosis_superfluid_v1beta1_gov_proto_goTypes = []interface{}{
	(*SetSuperfluidAssetsProposal)(nil),    // 0: osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal
	(*RemoveSuperfluidAssetsProposal)(nil), // 1: osmosis.superfluid.v1beta1.RemoveSuperfluidAssetsProposal
	(*superfluid.SuperfluidAsset)(nil),     // 2: osmosis.superfluid.SuperfluidAsset
}
var file_osmosis_superfluid_v1beta1_gov_proto_depIdxs = []int32{
	2, // 0: osmosis.superfluid.v1beta1.SetSuperfluidAssetsProposal.assets:type_name -> osmosis.superfluid.SuperfluidAsset
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_osmosis_superfluid_v1beta1_gov_proto_init() }
func file_osmosis_superfluid_v1beta1_gov_proto_init() {
	if File_osmosis_superfluid_v1beta1_gov_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_osmosis_superfluid_v1beta1_gov_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSuperfluidAssetsProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_superfluid_v1beta1_gov_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSuperfluidAssetsProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_osmosis_superfluid_v1beta1_gov_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_osmosis_superfluid_v1beta1_gov_proto_goTypes,
		DependencyIndexes: file_osmosis_superfluid_v1beta1_gov_proto_depIdxs,
		MessageInfos:      file_osmosis_superfluid_v1beta1_gov_proto_msgTypes,
	}.Build()
	File_osmosis_superfluid_v1beta1_gov_proto = out.File
	file_osmosis_superfluid_v1beta1_gov_proto_rawDesc = nil
	file_osmosis_superfluid_v1beta1_gov_proto_goTypes = nil
	file_osmosis_superfluid_v1beta1_gov_proto_depIdxs = nil
}
