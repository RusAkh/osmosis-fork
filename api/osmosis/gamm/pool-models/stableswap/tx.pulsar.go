// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package stableswapv1beta1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/gogo/protobuf/gogoproto"
	v1beta1 "github.com/osmosis-labs/osmosis/api/cosmos/base/v1beta1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_MsgCreateStableswapPool_3_list)(nil)

type _MsgCreateStableswapPool_3_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgCreateStableswapPool_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateStableswapPool_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgCreateStableswapPool_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateStableswapPool_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateStableswapPool_3_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateStableswapPool_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateStableswapPool_3_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgCreateStableswapPool_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgCreateStableswapPool_4_list)(nil)

type _MsgCreateStableswapPool_4_list struct {
	list *[]uint64
}

func (x *_MsgCreateStableswapPool_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgCreateStableswapPool_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_MsgCreateStableswapPool_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgCreateStableswapPool_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgCreateStableswapPool_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgCreateStableswapPool at list field ScalingFactors as it is not of Message kind"))
}

func (x *_MsgCreateStableswapPool_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgCreateStableswapPool_4_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_MsgCreateStableswapPool_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgCreateStableswapPool                           protoreflect.MessageDescriptor
	fd_MsgCreateStableswapPool_sender                    protoreflect.FieldDescriptor
	fd_MsgCreateStableswapPool_pool_params               protoreflect.FieldDescriptor
	fd_MsgCreateStableswapPool_initial_pool_liquidity    protoreflect.FieldDescriptor
	fd_MsgCreateStableswapPool_scaling_factors           protoreflect.FieldDescriptor
	fd_MsgCreateStableswapPool_future_pool_governor      protoreflect.FieldDescriptor
	fd_MsgCreateStableswapPool_scaling_factor_controller protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_pool_models_stableswap_tx_proto_init()
	md_MsgCreateStableswapPool = File_osmosis_gamm_pool_models_stableswap_tx_proto.Messages().ByName("MsgCreateStableswapPool")
	fd_MsgCreateStableswapPool_sender = md_MsgCreateStableswapPool.Fields().ByName("sender")
	fd_MsgCreateStableswapPool_pool_params = md_MsgCreateStableswapPool.Fields().ByName("pool_params")
	fd_MsgCreateStableswapPool_initial_pool_liquidity = md_MsgCreateStableswapPool.Fields().ByName("initial_pool_liquidity")
	fd_MsgCreateStableswapPool_scaling_factors = md_MsgCreateStableswapPool.Fields().ByName("scaling_factors")
	fd_MsgCreateStableswapPool_future_pool_governor = md_MsgCreateStableswapPool.Fields().ByName("future_pool_governor")
	fd_MsgCreateStableswapPool_scaling_factor_controller = md_MsgCreateStableswapPool.Fields().ByName("scaling_factor_controller")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateStableswapPool)(nil)

type fastReflection_MsgCreateStableswapPool MsgCreateStableswapPool

func (x *MsgCreateStableswapPool) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateStableswapPool)(x)
}

func (x *MsgCreateStableswapPool) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateStableswapPool_messageType fastReflection_MsgCreateStableswapPool_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateStableswapPool_messageType{}

type fastReflection_MsgCreateStableswapPool_messageType struct{}

func (x fastReflection_MsgCreateStableswapPool_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateStableswapPool)(nil)
}
func (x fastReflection_MsgCreateStableswapPool_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateStableswapPool)
}
func (x fastReflection_MsgCreateStableswapPool_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateStableswapPool
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateStableswapPool) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateStableswapPool
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateStableswapPool) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateStableswapPool_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateStableswapPool) New() protoreflect.Message {
	return new(fastReflection_MsgCreateStableswapPool)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateStableswapPool) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateStableswapPool)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateStableswapPool) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgCreateStableswapPool_sender, value) {
			return
		}
	}
	if x.PoolParams != nil {
		value := protoreflect.ValueOfMessage(x.PoolParams.ProtoReflect())
		if !f(fd_MsgCreateStableswapPool_pool_params, value) {
			return
		}
	}
	if len(x.InitialPoolLiquidity) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateStableswapPool_3_list{list: &x.InitialPoolLiquidity})
		if !f(fd_MsgCreateStableswapPool_initial_pool_liquidity, value) {
			return
		}
	}
	if len(x.ScalingFactors) != 0 {
		value := protoreflect.ValueOfList(&_MsgCreateStableswapPool_4_list{list: &x.ScalingFactors})
		if !f(fd_MsgCreateStableswapPool_scaling_factors, value) {
			return
		}
	}
	if x.FuturePoolGovernor != "" {
		value := protoreflect.ValueOfString(x.FuturePoolGovernor)
		if !f(fd_MsgCreateStableswapPool_future_pool_governor, value) {
			return
		}
	}
	if x.ScalingFactorController != "" {
		value := protoreflect.ValueOfString(x.ScalingFactorController)
		if !f(fd_MsgCreateStableswapPool_scaling_factor_controller, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateStableswapPool) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.sender":
		return x.Sender != ""
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.pool_params":
		return x.PoolParams != nil
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.initial_pool_liquidity":
		return len(x.InitialPoolLiquidity) != 0
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factors":
		return len(x.ScalingFactors) != 0
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.future_pool_governor":
		return x.FuturePoolGovernor != ""
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factor_controller":
		return x.ScalingFactorController != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateStableswapPool) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.sender":
		x.Sender = ""
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.pool_params":
		x.PoolParams = nil
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.initial_pool_liquidity":
		x.InitialPoolLiquidity = nil
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factors":
		x.ScalingFactors = nil
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.future_pool_governor":
		x.FuturePoolGovernor = ""
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factor_controller":
		x.ScalingFactorController = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateStableswapPool) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.pool_params":
		value := x.PoolParams
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.initial_pool_liquidity":
		if len(x.InitialPoolLiquidity) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateStableswapPool_3_list{})
		}
		listValue := &_MsgCreateStableswapPool_3_list{list: &x.InitialPoolLiquidity}
		return protoreflect.ValueOfList(listValue)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factors":
		if len(x.ScalingFactors) == 0 {
			return protoreflect.ValueOfList(&_MsgCreateStableswapPool_4_list{})
		}
		listValue := &_MsgCreateStableswapPool_4_list{list: &x.ScalingFactors}
		return protoreflect.ValueOfList(listValue)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.future_pool_governor":
		value := x.FuturePoolGovernor
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factor_controller":
		value := x.ScalingFactorController
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateStableswapPool) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.pool_params":
		x.PoolParams = value.Message().Interface().(*PoolParams)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.initial_pool_liquidity":
		lv := value.List()
		clv := lv.(*_MsgCreateStableswapPool_3_list)
		x.InitialPoolLiquidity = *clv.list
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factors":
		lv := value.List()
		clv := lv.(*_MsgCreateStableswapPool_4_list)
		x.ScalingFactors = *clv.list
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.future_pool_governor":
		x.FuturePoolGovernor = value.Interface().(string)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factor_controller":
		x.ScalingFactorController = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateStableswapPool) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.pool_params":
		if x.PoolParams == nil {
			x.PoolParams = new(PoolParams)
		}
		return protoreflect.ValueOfMessage(x.PoolParams.ProtoReflect())
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.initial_pool_liquidity":
		if x.InitialPoolLiquidity == nil {
			x.InitialPoolLiquidity = []*v1beta1.Coin{}
		}
		value := &_MsgCreateStableswapPool_3_list{list: &x.InitialPoolLiquidity}
		return protoreflect.ValueOfList(value)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factors":
		if x.ScalingFactors == nil {
			x.ScalingFactors = []uint64{}
		}
		value := &_MsgCreateStableswapPool_4_list{list: &x.ScalingFactors}
		return protoreflect.ValueOfList(value)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool is not mutable"))
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.future_pool_governor":
		panic(fmt.Errorf("field future_pool_governor of message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool is not mutable"))
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factor_controller":
		panic(fmt.Errorf("field scaling_factor_controller of message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateStableswapPool) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.pool_params":
		m := new(PoolParams)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.initial_pool_liquidity":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgCreateStableswapPool_3_list{list: &list})
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factors":
		list := []uint64{}
		return protoreflect.ValueOfList(&_MsgCreateStableswapPool_4_list{list: &list})
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.future_pool_governor":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.scaling_factor_controller":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateStableswapPool) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateStableswapPool) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateStableswapPool) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateStableswapPool) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateStableswapPool) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateStableswapPool)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolParams != nil {
			l = options.Size(x.PoolParams)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.InitialPoolLiquidity) > 0 {
			for _, e := range x.InitialPoolLiquidity {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ScalingFactors) > 0 {
			l = 0
			for _, e := range x.ScalingFactors {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		l = len(x.FuturePoolGovernor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ScalingFactorController)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateStableswapPool)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ScalingFactorController) > 0 {
			i -= len(x.ScalingFactorController)
			copy(dAtA[i:], x.ScalingFactorController)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ScalingFactorController)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.FuturePoolGovernor) > 0 {
			i -= len(x.FuturePoolGovernor)
			copy(dAtA[i:], x.FuturePoolGovernor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FuturePoolGovernor)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ScalingFactors) > 0 {
			var pksize2 int
			for _, num := range x.ScalingFactors {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.ScalingFactors {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x22
		}
		if len(x.InitialPoolLiquidity) > 0 {
			for iNdEx := len(x.InitialPoolLiquidity) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.InitialPoolLiquidity[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.PoolParams != nil {
			encoded, err := options.Marshal(x.PoolParams)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateStableswapPool)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateStableswapPool: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateStableswapPool: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolParams", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.PoolParams == nil {
					x.PoolParams = &PoolParams{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PoolParams); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InitialPoolLiquidity", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InitialPoolLiquidity = append(x.InitialPoolLiquidity, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.InitialPoolLiquidity[len(x.InitialPoolLiquidity)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.ScalingFactors = append(x.ScalingFactors, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.ScalingFactors) == 0 {
						x.ScalingFactors = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.ScalingFactors = append(x.ScalingFactors, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ScalingFactors", wireType)
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FuturePoolGovernor", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FuturePoolGovernor = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ScalingFactorController", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ScalingFactorController = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateStableswapPoolResponse         protoreflect.MessageDescriptor
	fd_MsgCreateStableswapPoolResponse_pool_id protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_pool_models_stableswap_tx_proto_init()
	md_MsgCreateStableswapPoolResponse = File_osmosis_gamm_pool_models_stableswap_tx_proto.Messages().ByName("MsgCreateStableswapPoolResponse")
	fd_MsgCreateStableswapPoolResponse_pool_id = md_MsgCreateStableswapPoolResponse.Fields().ByName("pool_id")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateStableswapPoolResponse)(nil)

type fastReflection_MsgCreateStableswapPoolResponse MsgCreateStableswapPoolResponse

func (x *MsgCreateStableswapPoolResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateStableswapPoolResponse)(x)
}

func (x *MsgCreateStableswapPoolResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateStableswapPoolResponse_messageType fastReflection_MsgCreateStableswapPoolResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateStableswapPoolResponse_messageType{}

type fastReflection_MsgCreateStableswapPoolResponse_messageType struct{}

func (x fastReflection_MsgCreateStableswapPoolResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateStableswapPoolResponse)(nil)
}
func (x fastReflection_MsgCreateStableswapPoolResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateStableswapPoolResponse)
}
func (x fastReflection_MsgCreateStableswapPoolResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateStableswapPoolResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateStableswapPoolResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateStableswapPoolResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateStableswapPoolResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateStableswapPoolResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateStableswapPoolResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCreateStableswapPoolResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateStableswapPoolResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateStableswapPoolResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateStableswapPoolResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgCreateStableswapPoolResponse_pool_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateStableswapPoolResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse.pool_id":
		return x.PoolId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateStableswapPoolResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse.pool_id":
		x.PoolId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateStableswapPoolResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateStableswapPoolResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse.pool_id":
		x.PoolId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateStableswapPoolResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateStableswapPoolResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateStableswapPoolResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateStableswapPoolResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateStableswapPoolResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateStableswapPoolResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateStableswapPoolResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateStableswapPoolResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateStableswapPoolResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateStableswapPoolResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateStableswapPoolResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateStableswapPoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgStableSwapAdjustScalingFactors_3_list)(nil)

type _MsgStableSwapAdjustScalingFactors_3_list struct {
	list *[]uint64
}

func (x *_MsgStableSwapAdjustScalingFactors_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgStableSwapAdjustScalingFactors_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_MsgStableSwapAdjustScalingFactors_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgStableSwapAdjustScalingFactors_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgStableSwapAdjustScalingFactors_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgStableSwapAdjustScalingFactors at list field ScalingFactors as it is not of Message kind"))
}

func (x *_MsgStableSwapAdjustScalingFactors_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgStableSwapAdjustScalingFactors_3_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_MsgStableSwapAdjustScalingFactors_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgStableSwapAdjustScalingFactors                 protoreflect.MessageDescriptor
	fd_MsgStableSwapAdjustScalingFactors_sender          protoreflect.FieldDescriptor
	fd_MsgStableSwapAdjustScalingFactors_pool_id         protoreflect.FieldDescriptor
	fd_MsgStableSwapAdjustScalingFactors_scaling_factors protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_pool_models_stableswap_tx_proto_init()
	md_MsgStableSwapAdjustScalingFactors = File_osmosis_gamm_pool_models_stableswap_tx_proto.Messages().ByName("MsgStableSwapAdjustScalingFactors")
	fd_MsgStableSwapAdjustScalingFactors_sender = md_MsgStableSwapAdjustScalingFactors.Fields().ByName("sender")
	fd_MsgStableSwapAdjustScalingFactors_pool_id = md_MsgStableSwapAdjustScalingFactors.Fields().ByName("pool_id")
	fd_MsgStableSwapAdjustScalingFactors_scaling_factors = md_MsgStableSwapAdjustScalingFactors.Fields().ByName("scaling_factors")
}

var _ protoreflect.Message = (*fastReflection_MsgStableSwapAdjustScalingFactors)(nil)

type fastReflection_MsgStableSwapAdjustScalingFactors MsgStableSwapAdjustScalingFactors

func (x *MsgStableSwapAdjustScalingFactors) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgStableSwapAdjustScalingFactors)(x)
}

func (x *MsgStableSwapAdjustScalingFactors) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgStableSwapAdjustScalingFactors_messageType fastReflection_MsgStableSwapAdjustScalingFactors_messageType
var _ protoreflect.MessageType = fastReflection_MsgStableSwapAdjustScalingFactors_messageType{}

type fastReflection_MsgStableSwapAdjustScalingFactors_messageType struct{}

func (x fastReflection_MsgStableSwapAdjustScalingFactors_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgStableSwapAdjustScalingFactors)(nil)
}
func (x fastReflection_MsgStableSwapAdjustScalingFactors_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgStableSwapAdjustScalingFactors)
}
func (x fastReflection_MsgStableSwapAdjustScalingFactors_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgStableSwapAdjustScalingFactors
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgStableSwapAdjustScalingFactors
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) Type() protoreflect.MessageType {
	return _fastReflection_MsgStableSwapAdjustScalingFactors_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) New() protoreflect.Message {
	return new(fastReflection_MsgStableSwapAdjustScalingFactors)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) Interface() protoreflect.ProtoMessage {
	return (*MsgStableSwapAdjustScalingFactors)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgStableSwapAdjustScalingFactors_sender, value) {
			return
		}
	}
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgStableSwapAdjustScalingFactors_pool_id, value) {
			return
		}
	}
	if len(x.ScalingFactors) != 0 {
		value := protoreflect.ValueOfList(&_MsgStableSwapAdjustScalingFactors_3_list{list: &x.ScalingFactors})
		if !f(fd_MsgStableSwapAdjustScalingFactors_scaling_factors, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.sender":
		return x.Sender != ""
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.pool_id":
		return x.PoolId != uint64(0)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.scaling_factors":
		return len(x.ScalingFactors) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.sender":
		x.Sender = ""
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.pool_id":
		x.PoolId = uint64(0)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.scaling_factors":
		x.ScalingFactors = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.scaling_factors":
		if len(x.ScalingFactors) == 0 {
			return protoreflect.ValueOfList(&_MsgStableSwapAdjustScalingFactors_3_list{})
		}
		listValue := &_MsgStableSwapAdjustScalingFactors_3_list{list: &x.ScalingFactors}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.pool_id":
		x.PoolId = value.Uint()
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.scaling_factors":
		lv := value.List()
		clv := lv.(*_MsgStableSwapAdjustScalingFactors_3_list)
		x.ScalingFactors = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.scaling_factors":
		if x.ScalingFactors == nil {
			x.ScalingFactors = []uint64{}
		}
		value := &_MsgStableSwapAdjustScalingFactors_3_list{list: &x.ScalingFactors}
		return protoreflect.ValueOfList(value)
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors is not mutable"))
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors.scaling_factors":
		list := []uint64{}
		return protoreflect.ValueOfList(&_MsgStableSwapAdjustScalingFactors_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgStableSwapAdjustScalingFactors) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgStableSwapAdjustScalingFactors)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		if len(x.ScalingFactors) > 0 {
			l = 0
			for _, e := range x.ScalingFactors {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgStableSwapAdjustScalingFactors)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ScalingFactors) > 0 {
			var pksize2 int
			for _, num := range x.ScalingFactors {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.ScalingFactors {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x1a
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgStableSwapAdjustScalingFactors)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgStableSwapAdjustScalingFactors: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgStableSwapAdjustScalingFactors: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.ScalingFactors = append(x.ScalingFactors, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.ScalingFactors) == 0 {
						x.ScalingFactors = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.ScalingFactors = append(x.ScalingFactors, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ScalingFactors", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgStableSwapAdjustScalingFactorsResponse protoreflect.MessageDescriptor
)

func init() {
	file_osmosis_gamm_pool_models_stableswap_tx_proto_init()
	md_MsgStableSwapAdjustScalingFactorsResponse = File_osmosis_gamm_pool_models_stableswap_tx_proto.Messages().ByName("MsgStableSwapAdjustScalingFactorsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgStableSwapAdjustScalingFactorsResponse)(nil)

type fastReflection_MsgStableSwapAdjustScalingFactorsResponse MsgStableSwapAdjustScalingFactorsResponse

func (x *MsgStableSwapAdjustScalingFactorsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgStableSwapAdjustScalingFactorsResponse)(x)
}

func (x *MsgStableSwapAdjustScalingFactorsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgStableSwapAdjustScalingFactorsResponse_messageType fastReflection_MsgStableSwapAdjustScalingFactorsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgStableSwapAdjustScalingFactorsResponse_messageType{}

type fastReflection_MsgStableSwapAdjustScalingFactorsResponse_messageType struct{}

func (x fastReflection_MsgStableSwapAdjustScalingFactorsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgStableSwapAdjustScalingFactorsResponse)(nil)
}
func (x fastReflection_MsgStableSwapAdjustScalingFactorsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgStableSwapAdjustScalingFactorsResponse)
}
func (x fastReflection_MsgStableSwapAdjustScalingFactorsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgStableSwapAdjustScalingFactorsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgStableSwapAdjustScalingFactorsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgStableSwapAdjustScalingFactorsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgStableSwapAdjustScalingFactorsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgStableSwapAdjustScalingFactorsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgStableSwapAdjustScalingFactorsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgStableSwapAdjustScalingFactorsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgStableSwapAdjustScalingFactorsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgStableSwapAdjustScalingFactorsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgStableSwapAdjustScalingFactorsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgStableSwapAdjustScalingFactorsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: osmosis/gamm/pool-models/stableswap/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ===================== MsgCreatePool
type MsgCreateStableswapPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender                  string          `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	PoolParams              *PoolParams     `protobuf:"bytes,2,opt,name=pool_params,json=poolParams,proto3" json:"pool_params,omitempty"`
	InitialPoolLiquidity    []*v1beta1.Coin `protobuf:"bytes,3,rep,name=initial_pool_liquidity,json=initialPoolLiquidity,proto3" json:"initial_pool_liquidity,omitempty"`
	ScalingFactors          []uint64        `protobuf:"varint,4,rep,packed,name=scaling_factors,json=scalingFactors,proto3" json:"scaling_factors,omitempty"`
	FuturePoolGovernor      string          `protobuf:"bytes,5,opt,name=future_pool_governor,json=futurePoolGovernor,proto3" json:"future_pool_governor,omitempty"`
	ScalingFactorController string          `protobuf:"bytes,6,opt,name=scaling_factor_controller,json=scalingFactorController,proto3" json:"scaling_factor_controller,omitempty"`
}

func (x *MsgCreateStableswapPool) Reset() {
	*x = MsgCreateStableswapPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateStableswapPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateStableswapPool) ProtoMessage() {}

// Deprecated: Use MsgCreateStableswapPool.ProtoReflect.Descriptor instead.
func (*MsgCreateStableswapPool) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgCreateStableswapPool) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgCreateStableswapPool) GetPoolParams() *PoolParams {
	if x != nil {
		return x.PoolParams
	}
	return nil
}

func (x *MsgCreateStableswapPool) GetInitialPoolLiquidity() []*v1beta1.Coin {
	if x != nil {
		return x.InitialPoolLiquidity
	}
	return nil
}

func (x *MsgCreateStableswapPool) GetScalingFactors() []uint64 {
	if x != nil {
		return x.ScalingFactors
	}
	return nil
}

func (x *MsgCreateStableswapPool) GetFuturePoolGovernor() string {
	if x != nil {
		return x.FuturePoolGovernor
	}
	return ""
}

func (x *MsgCreateStableswapPool) GetScalingFactorController() string {
	if x != nil {
		return x.ScalingFactorController
	}
	return ""
}

// Returns a poolID with custom poolName.
type MsgCreateStableswapPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
}

func (x *MsgCreateStableswapPoolResponse) Reset() {
	*x = MsgCreateStableswapPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateStableswapPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateStableswapPoolResponse) ProtoMessage() {}

// Deprecated: Use MsgCreateStableswapPoolResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateStableswapPoolResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescGZIP(), []int{1}
}

func (x *MsgCreateStableswapPoolResponse) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

// Sender must be the pool's scaling_factor_governor in order for the tx to
// succeed. Adjusts stableswap scaling factors.
type MsgStableSwapAdjustScalingFactors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	PoolId         uint64   `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	ScalingFactors []uint64 `protobuf:"varint,3,rep,packed,name=scaling_factors,json=scalingFactors,proto3" json:"scaling_factors,omitempty"`
}

func (x *MsgStableSwapAdjustScalingFactors) Reset() {
	*x = MsgStableSwapAdjustScalingFactors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStableSwapAdjustScalingFactors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStableSwapAdjustScalingFactors) ProtoMessage() {}

// Deprecated: Use MsgStableSwapAdjustScalingFactors.ProtoReflect.Descriptor instead.
func (*MsgStableSwapAdjustScalingFactors) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgStableSwapAdjustScalingFactors) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgStableSwapAdjustScalingFactors) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *MsgStableSwapAdjustScalingFactors) GetScalingFactors() []uint64 {
	if x != nil {
		return x.ScalingFactors
	}
	return nil
}

type MsgStableSwapAdjustScalingFactorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgStableSwapAdjustScalingFactorsResponse) Reset() {
	*x = MsgStableSwapAdjustScalingFactorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStableSwapAdjustScalingFactorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStableSwapAdjustScalingFactorsResponse) ProtoMessage() {}

// Deprecated: Use MsgStableSwapAdjustScalingFactorsResponse.ProtoReflect.Descriptor instead.
func (*MsgStableSwapAdjustScalingFactorsResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescGZIP(), []int{3}
}

var File_osmosis_gamm_pool_models_stableswap_tx_proto protoreflect.FileDescriptor

var file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2f, 0x67, 0x61, 0x6d, 0x6d, 0x2f, 0x70,
	0x6f, 0x6f, 0x6c, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x77, 0x61, 0x70, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x70, 0x6f, 0x6f,
	0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77,
	0x61, 0x70, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x39, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2f, 0x67, 0x61, 0x6d, 0x6d, 0x2f, 0x70,
	0x6f, 0x6f, 0x6c, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x77, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70,
	0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x04, 0x0a, 0x17,
	0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x77, 0x61, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x6f, 0x0a, 0x0b, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42,
	0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x52, 0x0a, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x16, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42,
	0x30, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x52, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04,
	0x42, 0x24, 0xf2, 0xde, 0x1f, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x51, 0x0a, 0x14, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x67, 0x6f, 0x76, 0x65,
	0x72, 0x6e, 0x6f, 0x72, 0x22, 0x52, 0x12, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x12, 0x60, 0x0a, 0x19, 0x73, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x24, 0xf2, 0xde,
	0x1f, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x22, 0x52, 0x17, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x1f, 0x4d,
	0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77,
	0x61, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x0a, 0xe2, 0xde, 0x1f, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x44, 0x52, 0x06, 0x70, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe2, 0xde, 0x1f, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49,
	0x44, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0f, 0x73, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x04, 0x42, 0x24, 0xf2, 0xde, 0x1f, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x2b, 0x0a, 0x29, 0x4d, 0x73, 0x67, 0x53,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53,
	0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf9, 0x02, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0xa8, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77,
	0x61, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x43, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73,
	0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x1a, 0x4b, 0x2e, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x50, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xc6, 0x01, 0x0a, 0x1e, 0x53, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x4d, 0x2e, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6c,
	0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x55, 0x2e, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0xe1, 0x02, 0x0a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x59, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x69, 0x73, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2f, 0x67, 0x61, 0x6d,
	0x6d, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x3b, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x77, 0x61, 0x70, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x04, 0x4f, 0x47, 0x50,
	0x53, 0xaa, 0x02, 0x2a, 0x4f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x47, 0x61, 0x6d, 0x6d,
	0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02,
	0x2a, 0x4f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x5c, 0x47, 0x61, 0x6d, 0x6d, 0x5c, 0x50, 0x6f,
	0x6f, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x77, 0x61, 0x70, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x36, 0x4f, 0x73,
	0x6d, 0x6f, 0x73, 0x69, 0x73, 0x5c, 0x47, 0x61, 0x6d, 0x6d, 0x5c, 0x50, 0x6f, 0x6f, 0x6c, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70,
	0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x2e, 0x4f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x3a, 0x3a,
	0x47, 0x61, 0x6d, 0x6d, 0x3a, 0x3a, 0x50, 0x6f, 0x6f, 0x6c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x3a, 0x3a, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescOnce sync.Once
	file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescData = file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDesc
)

func file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescGZIP() []byte {
	file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescOnce.Do(func() {
		file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescData)
	})
	return file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDescData
}

var file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_osmosis_gamm_pool_models_stableswap_tx_proto_goTypes = []interface{}{
	(*MsgCreateStableswapPool)(nil),                   // 0: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool
	(*MsgCreateStableswapPoolResponse)(nil),           // 1: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse
	(*MsgStableSwapAdjustScalingFactors)(nil),         // 2: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors
	(*MsgStableSwapAdjustScalingFactorsResponse)(nil), // 3: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse
	(*PoolParams)(nil),                                // 4: osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams
	(*v1beta1.Coin)(nil),                              // 5: cosmos.base.v1beta1.Coin
}
var file_osmosis_gamm_pool_models_stableswap_tx_proto_depIdxs = []int32{
	4, // 0: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.pool_params:type_name -> osmosis.gamm.poolmodels.stableswap.v1beta1.PoolParams
	5, // 1: osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool.initial_pool_liquidity:type_name -> cosmos.base.v1beta1.Coin
	0, // 2: osmosis.gamm.poolmodels.stableswap.v1beta1.Msg.CreateStableswapPool:input_type -> osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPool
	2, // 3: osmosis.gamm.poolmodels.stableswap.v1beta1.Msg.StableSwapAdjustScalingFactors:input_type -> osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactors
	1, // 4: osmosis.gamm.poolmodels.stableswap.v1beta1.Msg.CreateStableswapPool:output_type -> osmosis.gamm.poolmodels.stableswap.v1beta1.MsgCreateStableswapPoolResponse
	3, // 5: osmosis.gamm.poolmodels.stableswap.v1beta1.Msg.StableSwapAdjustScalingFactors:output_type -> osmosis.gamm.poolmodels.stableswap.v1beta1.MsgStableSwapAdjustScalingFactorsResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_osmosis_gamm_pool_models_stableswap_tx_proto_init() }
func file_osmosis_gamm_pool_models_stableswap_tx_proto_init() {
	if File_osmosis_gamm_pool_models_stableswap_tx_proto != nil {
		return
	}
	file_osmosis_gamm_pool_models_stableswap_stableswap_pool_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateStableswapPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateStableswapPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStableSwapAdjustScalingFactors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStableSwapAdjustScalingFactorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_osmosis_gamm_pool_models_stableswap_tx_proto_goTypes,
		DependencyIndexes: file_osmosis_gamm_pool_models_stableswap_tx_proto_depIdxs,
		MessageInfos:      file_osmosis_gamm_pool_models_stableswap_tx_proto_msgTypes,
	}.Build()
	File_osmosis_gamm_pool_models_stableswap_tx_proto = out.File
	file_osmosis_gamm_pool_models_stableswap_tx_proto_rawDesc = nil
	file_osmosis_gamm_pool_models_stableswap_tx_proto_goTypes = nil
	file_osmosis_gamm_pool_models_stableswap_tx_proto_depIdxs = nil
}
