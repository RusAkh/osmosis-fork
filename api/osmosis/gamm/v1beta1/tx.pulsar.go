// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package gammv1beta1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	v1beta1 "github.com/cosmos/cosmos-sdk/api/cosmos/base/v1beta1"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_MsgJoinPool_4_list)(nil)

type _MsgJoinPool_4_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgJoinPool_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgJoinPool_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgJoinPool_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgJoinPool_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgJoinPool_4_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgJoinPool_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgJoinPool_4_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgJoinPool_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgJoinPool                  protoreflect.MessageDescriptor
	fd_MsgJoinPool_sender           protoreflect.FieldDescriptor
	fd_MsgJoinPool_pool_id          protoreflect.FieldDescriptor
	fd_MsgJoinPool_share_out_amount protoreflect.FieldDescriptor
	fd_MsgJoinPool_token_in_maxs    protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgJoinPool = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgJoinPool")
	fd_MsgJoinPool_sender = md_MsgJoinPool.Fields().ByName("sender")
	fd_MsgJoinPool_pool_id = md_MsgJoinPool.Fields().ByName("pool_id")
	fd_MsgJoinPool_share_out_amount = md_MsgJoinPool.Fields().ByName("share_out_amount")
	fd_MsgJoinPool_token_in_maxs = md_MsgJoinPool.Fields().ByName("token_in_maxs")
}

var _ protoreflect.Message = (*fastReflection_MsgJoinPool)(nil)

type fastReflection_MsgJoinPool MsgJoinPool

func (x *MsgJoinPool) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgJoinPool)(x)
}

func (x *MsgJoinPool) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgJoinPool_messageType fastReflection_MsgJoinPool_messageType
var _ protoreflect.MessageType = fastReflection_MsgJoinPool_messageType{}

type fastReflection_MsgJoinPool_messageType struct{}

func (x fastReflection_MsgJoinPool_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgJoinPool)(nil)
}
func (x fastReflection_MsgJoinPool_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgJoinPool)
}
func (x fastReflection_MsgJoinPool_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinPool
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgJoinPool) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinPool
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgJoinPool) Type() protoreflect.MessageType {
	return _fastReflection_MsgJoinPool_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgJoinPool) New() protoreflect.Message {
	return new(fastReflection_MsgJoinPool)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgJoinPool) Interface() protoreflect.ProtoMessage {
	return (*MsgJoinPool)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgJoinPool) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgJoinPool_sender, value) {
			return
		}
	}
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgJoinPool_pool_id, value) {
			return
		}
	}
	if x.ShareOutAmount != "" {
		value := protoreflect.ValueOfString(x.ShareOutAmount)
		if !f(fd_MsgJoinPool_share_out_amount, value) {
			return
		}
	}
	if len(x.TokenInMaxs) != 0 {
		value := protoreflect.ValueOfList(&_MsgJoinPool_4_list{list: &x.TokenInMaxs})
		if !f(fd_MsgJoinPool_token_in_maxs, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgJoinPool) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPool.sender":
		return x.Sender != ""
	case "osmosis.gamm.v1beta1.MsgJoinPool.pool_id":
		return x.PoolId != uint64(0)
	case "osmosis.gamm.v1beta1.MsgJoinPool.share_out_amount":
		return x.ShareOutAmount != ""
	case "osmosis.gamm.v1beta1.MsgJoinPool.token_in_maxs":
		return len(x.TokenInMaxs) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPool does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinPool) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPool.sender":
		x.Sender = ""
	case "osmosis.gamm.v1beta1.MsgJoinPool.pool_id":
		x.PoolId = uint64(0)
	case "osmosis.gamm.v1beta1.MsgJoinPool.share_out_amount":
		x.ShareOutAmount = ""
	case "osmosis.gamm.v1beta1.MsgJoinPool.token_in_maxs":
		x.TokenInMaxs = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPool does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgJoinPool) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPool.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgJoinPool.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "osmosis.gamm.v1beta1.MsgJoinPool.share_out_amount":
		value := x.ShareOutAmount
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgJoinPool.token_in_maxs":
		if len(x.TokenInMaxs) == 0 {
			return protoreflect.ValueOfList(&_MsgJoinPool_4_list{})
		}
		listValue := &_MsgJoinPool_4_list{list: &x.TokenInMaxs}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPool does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinPool) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPool.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgJoinPool.pool_id":
		x.PoolId = value.Uint()
	case "osmosis.gamm.v1beta1.MsgJoinPool.share_out_amount":
		x.ShareOutAmount = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgJoinPool.token_in_maxs":
		lv := value.List()
		clv := lv.(*_MsgJoinPool_4_list)
		x.TokenInMaxs = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPool does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinPool) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPool.token_in_maxs":
		if x.TokenInMaxs == nil {
			x.TokenInMaxs = []*v1beta1.Coin{}
		}
		value := &_MsgJoinPool_4_list{list: &x.TokenInMaxs}
		return protoreflect.ValueOfList(value)
	case "osmosis.gamm.v1beta1.MsgJoinPool.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.v1beta1.MsgJoinPool is not mutable"))
	case "osmosis.gamm.v1beta1.MsgJoinPool.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.v1beta1.MsgJoinPool is not mutable"))
	case "osmosis.gamm.v1beta1.MsgJoinPool.share_out_amount":
		panic(fmt.Errorf("field share_out_amount of message osmosis.gamm.v1beta1.MsgJoinPool is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPool does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgJoinPool) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPool.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgJoinPool.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "osmosis.gamm.v1beta1.MsgJoinPool.share_out_amount":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgJoinPool.token_in_maxs":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgJoinPool_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPool does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgJoinPool) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgJoinPool", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgJoinPool) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinPool) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgJoinPool) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgJoinPool) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgJoinPool)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.ShareOutAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TokenInMaxs) > 0 {
			for _, e := range x.TokenInMaxs {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinPool)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenInMaxs) > 0 {
			for iNdEx := len(x.TokenInMaxs) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TokenInMaxs[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.ShareOutAmount) > 0 {
			i -= len(x.ShareOutAmount)
			copy(dAtA[i:], x.ShareOutAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareOutAmount)))
			i--
			dAtA[i] = 0x1a
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinPool)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinPool: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinPool: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareOutAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareOutAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenInMaxs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenInMaxs = append(x.TokenInMaxs, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenInMaxs[len(x.TokenInMaxs)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgJoinPoolResponse_2_list)(nil)

type _MsgJoinPoolResponse_2_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgJoinPoolResponse_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgJoinPoolResponse_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgJoinPoolResponse_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgJoinPoolResponse_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgJoinPoolResponse_2_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgJoinPoolResponse_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgJoinPoolResponse_2_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgJoinPoolResponse_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgJoinPoolResponse                  protoreflect.MessageDescriptor
	fd_MsgJoinPoolResponse_share_out_amount protoreflect.FieldDescriptor
	fd_MsgJoinPoolResponse_token_in         protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgJoinPoolResponse = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgJoinPoolResponse")
	fd_MsgJoinPoolResponse_share_out_amount = md_MsgJoinPoolResponse.Fields().ByName("share_out_amount")
	fd_MsgJoinPoolResponse_token_in = md_MsgJoinPoolResponse.Fields().ByName("token_in")
}

var _ protoreflect.Message = (*fastReflection_MsgJoinPoolResponse)(nil)

type fastReflection_MsgJoinPoolResponse MsgJoinPoolResponse

func (x *MsgJoinPoolResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgJoinPoolResponse)(x)
}

func (x *MsgJoinPoolResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgJoinPoolResponse_messageType fastReflection_MsgJoinPoolResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgJoinPoolResponse_messageType{}

type fastReflection_MsgJoinPoolResponse_messageType struct{}

func (x fastReflection_MsgJoinPoolResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgJoinPoolResponse)(nil)
}
func (x fastReflection_MsgJoinPoolResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgJoinPoolResponse)
}
func (x fastReflection_MsgJoinPoolResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinPoolResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgJoinPoolResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinPoolResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgJoinPoolResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgJoinPoolResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgJoinPoolResponse) New() protoreflect.Message {
	return new(fastReflection_MsgJoinPoolResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgJoinPoolResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgJoinPoolResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgJoinPoolResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ShareOutAmount != "" {
		value := protoreflect.ValueOfString(x.ShareOutAmount)
		if !f(fd_MsgJoinPoolResponse_share_out_amount, value) {
			return
		}
	}
	if len(x.TokenIn) != 0 {
		value := protoreflect.ValueOfList(&_MsgJoinPoolResponse_2_list{list: &x.TokenIn})
		if !f(fd_MsgJoinPoolResponse_token_in, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgJoinPoolResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.share_out_amount":
		return x.ShareOutAmount != ""
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.token_in":
		return len(x.TokenIn) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPoolResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinPoolResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.share_out_amount":
		x.ShareOutAmount = ""
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.token_in":
		x.TokenIn = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPoolResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgJoinPoolResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.share_out_amount":
		value := x.ShareOutAmount
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.token_in":
		if len(x.TokenIn) == 0 {
			return protoreflect.ValueOfList(&_MsgJoinPoolResponse_2_list{})
		}
		listValue := &_MsgJoinPoolResponse_2_list{list: &x.TokenIn}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPoolResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinPoolResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.share_out_amount":
		x.ShareOutAmount = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.token_in":
		lv := value.List()
		clv := lv.(*_MsgJoinPoolResponse_2_list)
		x.TokenIn = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPoolResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinPoolResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.token_in":
		if x.TokenIn == nil {
			x.TokenIn = []*v1beta1.Coin{}
		}
		value := &_MsgJoinPoolResponse_2_list{list: &x.TokenIn}
		return protoreflect.ValueOfList(value)
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.share_out_amount":
		panic(fmt.Errorf("field share_out_amount of message osmosis.gamm.v1beta1.MsgJoinPoolResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPoolResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgJoinPoolResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.share_out_amount":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgJoinPoolResponse.token_in":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgJoinPoolResponse_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinPoolResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgJoinPoolResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgJoinPoolResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgJoinPoolResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinPoolResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgJoinPoolResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgJoinPoolResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgJoinPoolResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ShareOutAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TokenIn) > 0 {
			for _, e := range x.TokenIn {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinPoolResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenIn) > 0 {
			for iNdEx := len(x.TokenIn) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TokenIn[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.ShareOutAmount) > 0 {
			i -= len(x.ShareOutAmount)
			copy(dAtA[i:], x.ShareOutAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareOutAmount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinPoolResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinPoolResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinPoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareOutAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareOutAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenIn", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenIn = append(x.TokenIn, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenIn[len(x.TokenIn)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgExitPool_4_list)(nil)

type _MsgExitPool_4_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgExitPool_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgExitPool_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgExitPool_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgExitPool_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgExitPool_4_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgExitPool_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgExitPool_4_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgExitPool_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgExitPool                 protoreflect.MessageDescriptor
	fd_MsgExitPool_sender          protoreflect.FieldDescriptor
	fd_MsgExitPool_pool_id         protoreflect.FieldDescriptor
	fd_MsgExitPool_share_in_amount protoreflect.FieldDescriptor
	fd_MsgExitPool_token_out_mins  protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgExitPool = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgExitPool")
	fd_MsgExitPool_sender = md_MsgExitPool.Fields().ByName("sender")
	fd_MsgExitPool_pool_id = md_MsgExitPool.Fields().ByName("pool_id")
	fd_MsgExitPool_share_in_amount = md_MsgExitPool.Fields().ByName("share_in_amount")
	fd_MsgExitPool_token_out_mins = md_MsgExitPool.Fields().ByName("token_out_mins")
}

var _ protoreflect.Message = (*fastReflection_MsgExitPool)(nil)

type fastReflection_MsgExitPool MsgExitPool

func (x *MsgExitPool) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgExitPool)(x)
}

func (x *MsgExitPool) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgExitPool_messageType fastReflection_MsgExitPool_messageType
var _ protoreflect.MessageType = fastReflection_MsgExitPool_messageType{}

type fastReflection_MsgExitPool_messageType struct{}

func (x fastReflection_MsgExitPool_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgExitPool)(nil)
}
func (x fastReflection_MsgExitPool_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgExitPool)
}
func (x fastReflection_MsgExitPool_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitPool
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgExitPool) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitPool
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgExitPool) Type() protoreflect.MessageType {
	return _fastReflection_MsgExitPool_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgExitPool) New() protoreflect.Message {
	return new(fastReflection_MsgExitPool)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgExitPool) Interface() protoreflect.ProtoMessage {
	return (*MsgExitPool)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgExitPool) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgExitPool_sender, value) {
			return
		}
	}
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgExitPool_pool_id, value) {
			return
		}
	}
	if x.ShareInAmount != "" {
		value := protoreflect.ValueOfString(x.ShareInAmount)
		if !f(fd_MsgExitPool_share_in_amount, value) {
			return
		}
	}
	if len(x.TokenOutMins) != 0 {
		value := protoreflect.ValueOfList(&_MsgExitPool_4_list{list: &x.TokenOutMins})
		if !f(fd_MsgExitPool_token_out_mins, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgExitPool) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPool.sender":
		return x.Sender != ""
	case "osmosis.gamm.v1beta1.MsgExitPool.pool_id":
		return x.PoolId != uint64(0)
	case "osmosis.gamm.v1beta1.MsgExitPool.share_in_amount":
		return x.ShareInAmount != ""
	case "osmosis.gamm.v1beta1.MsgExitPool.token_out_mins":
		return len(x.TokenOutMins) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPool does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitPool) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPool.sender":
		x.Sender = ""
	case "osmosis.gamm.v1beta1.MsgExitPool.pool_id":
		x.PoolId = uint64(0)
	case "osmosis.gamm.v1beta1.MsgExitPool.share_in_amount":
		x.ShareInAmount = ""
	case "osmosis.gamm.v1beta1.MsgExitPool.token_out_mins":
		x.TokenOutMins = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPool does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgExitPool) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPool.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgExitPool.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "osmosis.gamm.v1beta1.MsgExitPool.share_in_amount":
		value := x.ShareInAmount
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgExitPool.token_out_mins":
		if len(x.TokenOutMins) == 0 {
			return protoreflect.ValueOfList(&_MsgExitPool_4_list{})
		}
		listValue := &_MsgExitPool_4_list{list: &x.TokenOutMins}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPool does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitPool) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPool.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgExitPool.pool_id":
		x.PoolId = value.Uint()
	case "osmosis.gamm.v1beta1.MsgExitPool.share_in_amount":
		x.ShareInAmount = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgExitPool.token_out_mins":
		lv := value.List()
		clv := lv.(*_MsgExitPool_4_list)
		x.TokenOutMins = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPool does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitPool) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPool.token_out_mins":
		if x.TokenOutMins == nil {
			x.TokenOutMins = []*v1beta1.Coin{}
		}
		value := &_MsgExitPool_4_list{list: &x.TokenOutMins}
		return protoreflect.ValueOfList(value)
	case "osmosis.gamm.v1beta1.MsgExitPool.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.v1beta1.MsgExitPool is not mutable"))
	case "osmosis.gamm.v1beta1.MsgExitPool.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.v1beta1.MsgExitPool is not mutable"))
	case "osmosis.gamm.v1beta1.MsgExitPool.share_in_amount":
		panic(fmt.Errorf("field share_in_amount of message osmosis.gamm.v1beta1.MsgExitPool is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPool does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgExitPool) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPool.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgExitPool.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "osmosis.gamm.v1beta1.MsgExitPool.share_in_amount":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgExitPool.token_out_mins":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgExitPool_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPool"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPool does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgExitPool) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgExitPool", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgExitPool) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitPool) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgExitPool) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgExitPool) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgExitPool)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.ShareInAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TokenOutMins) > 0 {
			for _, e := range x.TokenOutMins {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitPool)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenOutMins) > 0 {
			for iNdEx := len(x.TokenOutMins) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TokenOutMins[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.ShareInAmount) > 0 {
			i -= len(x.ShareInAmount)
			copy(dAtA[i:], x.ShareInAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareInAmount)))
			i--
			dAtA[i] = 0x1a
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitPool)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitPool: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitPool: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareInAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareInAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOutMins", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenOutMins = append(x.TokenOutMins, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenOutMins[len(x.TokenOutMins)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgExitPoolResponse_1_list)(nil)

type _MsgExitPoolResponse_1_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgExitPoolResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgExitPoolResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgExitPoolResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgExitPoolResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgExitPoolResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgExitPoolResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgExitPoolResponse_1_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgExitPoolResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgExitPoolResponse           protoreflect.MessageDescriptor
	fd_MsgExitPoolResponse_token_out protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgExitPoolResponse = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgExitPoolResponse")
	fd_MsgExitPoolResponse_token_out = md_MsgExitPoolResponse.Fields().ByName("token_out")
}

var _ protoreflect.Message = (*fastReflection_MsgExitPoolResponse)(nil)

type fastReflection_MsgExitPoolResponse MsgExitPoolResponse

func (x *MsgExitPoolResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgExitPoolResponse)(x)
}

func (x *MsgExitPoolResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgExitPoolResponse_messageType fastReflection_MsgExitPoolResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgExitPoolResponse_messageType{}

type fastReflection_MsgExitPoolResponse_messageType struct{}

func (x fastReflection_MsgExitPoolResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgExitPoolResponse)(nil)
}
func (x fastReflection_MsgExitPoolResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgExitPoolResponse)
}
func (x fastReflection_MsgExitPoolResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitPoolResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgExitPoolResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitPoolResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgExitPoolResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgExitPoolResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgExitPoolResponse) New() protoreflect.Message {
	return new(fastReflection_MsgExitPoolResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgExitPoolResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgExitPoolResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgExitPoolResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.TokenOut) != 0 {
		value := protoreflect.ValueOfList(&_MsgExitPoolResponse_1_list{list: &x.TokenOut})
		if !f(fd_MsgExitPoolResponse_token_out, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgExitPoolResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPoolResponse.token_out":
		return len(x.TokenOut) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPoolResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitPoolResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPoolResponse.token_out":
		x.TokenOut = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPoolResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgExitPoolResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPoolResponse.token_out":
		if len(x.TokenOut) == 0 {
			return protoreflect.ValueOfList(&_MsgExitPoolResponse_1_list{})
		}
		listValue := &_MsgExitPoolResponse_1_list{list: &x.TokenOut}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPoolResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitPoolResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPoolResponse.token_out":
		lv := value.List()
		clv := lv.(*_MsgExitPoolResponse_1_list)
		x.TokenOut = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPoolResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitPoolResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPoolResponse.token_out":
		if x.TokenOut == nil {
			x.TokenOut = []*v1beta1.Coin{}
		}
		value := &_MsgExitPoolResponse_1_list{list: &x.TokenOut}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPoolResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgExitPoolResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitPoolResponse.token_out":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgExitPoolResponse_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitPoolResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitPoolResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgExitPoolResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgExitPoolResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgExitPoolResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitPoolResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgExitPoolResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgExitPoolResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgExitPoolResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.TokenOut) > 0 {
			for _, e := range x.TokenOut {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitPoolResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenOut) > 0 {
			for iNdEx := len(x.TokenOut) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TokenOut[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitPoolResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitPoolResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitPoolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOut", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenOut = append(x.TokenOut, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenOut[len(x.TokenOut)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SwapAmountInRoute                 protoreflect.MessageDescriptor
	fd_SwapAmountInRoute_pool_id         protoreflect.FieldDescriptor
	fd_SwapAmountInRoute_token_out_denom protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_SwapAmountInRoute = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("SwapAmountInRoute")
	fd_SwapAmountInRoute_pool_id = md_SwapAmountInRoute.Fields().ByName("pool_id")
	fd_SwapAmountInRoute_token_out_denom = md_SwapAmountInRoute.Fields().ByName("token_out_denom")
}

var _ protoreflect.Message = (*fastReflection_SwapAmountInRoute)(nil)

type fastReflection_SwapAmountInRoute SwapAmountInRoute

func (x *SwapAmountInRoute) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SwapAmountInRoute)(x)
}

func (x *SwapAmountInRoute) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SwapAmountInRoute_messageType fastReflection_SwapAmountInRoute_messageType
var _ protoreflect.MessageType = fastReflection_SwapAmountInRoute_messageType{}

type fastReflection_SwapAmountInRoute_messageType struct{}

func (x fastReflection_SwapAmountInRoute_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SwapAmountInRoute)(nil)
}
func (x fastReflection_SwapAmountInRoute_messageType) New() protoreflect.Message {
	return new(fastReflection_SwapAmountInRoute)
}
func (x fastReflection_SwapAmountInRoute_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SwapAmountInRoute
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SwapAmountInRoute) Descriptor() protoreflect.MessageDescriptor {
	return md_SwapAmountInRoute
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SwapAmountInRoute) Type() protoreflect.MessageType {
	return _fastReflection_SwapAmountInRoute_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SwapAmountInRoute) New() protoreflect.Message {
	return new(fastReflection_SwapAmountInRoute)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SwapAmountInRoute) Interface() protoreflect.ProtoMessage {
	return (*SwapAmountInRoute)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SwapAmountInRoute) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_SwapAmountInRoute_pool_id, value) {
			return
		}
	}
	if x.TokenOutDenom != "" {
		value := protoreflect.ValueOfString(x.TokenOutDenom)
		if !f(fd_SwapAmountInRoute_token_out_denom, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SwapAmountInRoute) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.pool_id":
		return x.PoolId != uint64(0)
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.token_out_denom":
		return x.TokenOutDenom != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountInRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountInRoute does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapAmountInRoute) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.pool_id":
		x.PoolId = uint64(0)
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.token_out_denom":
		x.TokenOutDenom = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountInRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountInRoute does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SwapAmountInRoute) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.token_out_denom":
		value := x.TokenOutDenom
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountInRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountInRoute does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapAmountInRoute) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.pool_id":
		x.PoolId = value.Uint()
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.token_out_denom":
		x.TokenOutDenom = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountInRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountInRoute does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapAmountInRoute) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.v1beta1.SwapAmountInRoute is not mutable"))
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.token_out_denom":
		panic(fmt.Errorf("field token_out_denom of message osmosis.gamm.v1beta1.SwapAmountInRoute is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountInRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountInRoute does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SwapAmountInRoute) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "osmosis.gamm.v1beta1.SwapAmountInRoute.token_out_denom":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountInRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountInRoute does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SwapAmountInRoute) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.SwapAmountInRoute", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SwapAmountInRoute) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapAmountInRoute) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SwapAmountInRoute) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SwapAmountInRoute) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SwapAmountInRoute)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.TokenOutDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SwapAmountInRoute)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenOutDenom) > 0 {
			i -= len(x.TokenOutDenom)
			copy(dAtA[i:], x.TokenOutDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenOutDenom)))
			i--
			dAtA[i] = 0x12
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SwapAmountInRoute)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SwapAmountInRoute: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SwapAmountInRoute: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOutDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenOutDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgSwapExactAmountIn_2_list)(nil)

type _MsgSwapExactAmountIn_2_list struct {
	list *[]*SwapAmountInRoute
}

func (x *_MsgSwapExactAmountIn_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgSwapExactAmountIn_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgSwapExactAmountIn_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SwapAmountInRoute)
	(*x.list)[i] = concreteValue
}

func (x *_MsgSwapExactAmountIn_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SwapAmountInRoute)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgSwapExactAmountIn_2_list) AppendMutable() protoreflect.Value {
	v := new(SwapAmountInRoute)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgSwapExactAmountIn_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgSwapExactAmountIn_2_list) NewElement() protoreflect.Value {
	v := new(SwapAmountInRoute)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgSwapExactAmountIn_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgSwapExactAmountIn                      protoreflect.MessageDescriptor
	fd_MsgSwapExactAmountIn_sender               protoreflect.FieldDescriptor
	fd_MsgSwapExactAmountIn_routes               protoreflect.FieldDescriptor
	fd_MsgSwapExactAmountIn_token_in             protoreflect.FieldDescriptor
	fd_MsgSwapExactAmountIn_token_out_min_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgSwapExactAmountIn = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgSwapExactAmountIn")
	fd_MsgSwapExactAmountIn_sender = md_MsgSwapExactAmountIn.Fields().ByName("sender")
	fd_MsgSwapExactAmountIn_routes = md_MsgSwapExactAmountIn.Fields().ByName("routes")
	fd_MsgSwapExactAmountIn_token_in = md_MsgSwapExactAmountIn.Fields().ByName("token_in")
	fd_MsgSwapExactAmountIn_token_out_min_amount = md_MsgSwapExactAmountIn.Fields().ByName("token_out_min_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgSwapExactAmountIn)(nil)

type fastReflection_MsgSwapExactAmountIn MsgSwapExactAmountIn

func (x *MsgSwapExactAmountIn) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSwapExactAmountIn)(x)
}

func (x *MsgSwapExactAmountIn) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSwapExactAmountIn_messageType fastReflection_MsgSwapExactAmountIn_messageType
var _ protoreflect.MessageType = fastReflection_MsgSwapExactAmountIn_messageType{}

type fastReflection_MsgSwapExactAmountIn_messageType struct{}

func (x fastReflection_MsgSwapExactAmountIn_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSwapExactAmountIn)(nil)
}
func (x fastReflection_MsgSwapExactAmountIn_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSwapExactAmountIn)
}
func (x fastReflection_MsgSwapExactAmountIn_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSwapExactAmountIn
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSwapExactAmountIn) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSwapExactAmountIn
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSwapExactAmountIn) Type() protoreflect.MessageType {
	return _fastReflection_MsgSwapExactAmountIn_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSwapExactAmountIn) New() protoreflect.Message {
	return new(fastReflection_MsgSwapExactAmountIn)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSwapExactAmountIn) Interface() protoreflect.ProtoMessage {
	return (*MsgSwapExactAmountIn)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSwapExactAmountIn) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgSwapExactAmountIn_sender, value) {
			return
		}
	}
	if len(x.Routes) != 0 {
		value := protoreflect.ValueOfList(&_MsgSwapExactAmountIn_2_list{list: &x.Routes})
		if !f(fd_MsgSwapExactAmountIn_routes, value) {
			return
		}
	}
	if x.TokenIn != nil {
		value := protoreflect.ValueOfMessage(x.TokenIn.ProtoReflect())
		if !f(fd_MsgSwapExactAmountIn_token_in, value) {
			return
		}
	}
	if x.TokenOutMinAmount != "" {
		value := protoreflect.ValueOfString(x.TokenOutMinAmount)
		if !f(fd_MsgSwapExactAmountIn_token_out_min_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSwapExactAmountIn) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.sender":
		return x.Sender != ""
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.routes":
		return len(x.Routes) != 0
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_in":
		return x.TokenIn != nil
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_out_min_amount":
		return x.TokenOutMinAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountIn does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountIn) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.sender":
		x.Sender = ""
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.routes":
		x.Routes = nil
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_in":
		x.TokenIn = nil
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_out_min_amount":
		x.TokenOutMinAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountIn does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSwapExactAmountIn) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.routes":
		if len(x.Routes) == 0 {
			return protoreflect.ValueOfList(&_MsgSwapExactAmountIn_2_list{})
		}
		listValue := &_MsgSwapExactAmountIn_2_list{list: &x.Routes}
		return protoreflect.ValueOfList(listValue)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_in":
		value := x.TokenIn
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_out_min_amount":
		value := x.TokenOutMinAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountIn does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountIn) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.routes":
		lv := value.List()
		clv := lv.(*_MsgSwapExactAmountIn_2_list)
		x.Routes = *clv.list
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_in":
		x.TokenIn = value.Message().Interface().(*v1beta1.Coin)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_out_min_amount":
		x.TokenOutMinAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountIn does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountIn) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.routes":
		if x.Routes == nil {
			x.Routes = []*SwapAmountInRoute{}
		}
		value := &_MsgSwapExactAmountIn_2_list{list: &x.Routes}
		return protoreflect.ValueOfList(value)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_in":
		if x.TokenIn == nil {
			x.TokenIn = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.TokenIn.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.v1beta1.MsgSwapExactAmountIn is not mutable"))
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_out_min_amount":
		panic(fmt.Errorf("field token_out_min_amount of message osmosis.gamm.v1beta1.MsgSwapExactAmountIn is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountIn does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSwapExactAmountIn) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.routes":
		list := []*SwapAmountInRoute{}
		return protoreflect.ValueOfList(&_MsgSwapExactAmountIn_2_list{list: &list})
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_in":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_out_min_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountIn does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSwapExactAmountIn) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgSwapExactAmountIn", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSwapExactAmountIn) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountIn) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSwapExactAmountIn) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSwapExactAmountIn) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSwapExactAmountIn)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Routes) > 0 {
			for _, e := range x.Routes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.TokenIn != nil {
			l = options.Size(x.TokenIn)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TokenOutMinAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSwapExactAmountIn)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenOutMinAmount) > 0 {
			i -= len(x.TokenOutMinAmount)
			copy(dAtA[i:], x.TokenOutMinAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenOutMinAmount)))
			i--
			dAtA[i] = 0x22
		}
		if x.TokenIn != nil {
			encoded, err := options.Marshal(x.TokenIn)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Routes) > 0 {
			for iNdEx := len(x.Routes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Routes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSwapExactAmountIn)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSwapExactAmountIn: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSwapExactAmountIn: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Routes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Routes = append(x.Routes, &SwapAmountInRoute{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Routes[len(x.Routes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenIn", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TokenIn == nil {
					x.TokenIn = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenIn); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOutMinAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenOutMinAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSwapExactAmountInResponse                  protoreflect.MessageDescriptor
	fd_MsgSwapExactAmountInResponse_token_out_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgSwapExactAmountInResponse = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgSwapExactAmountInResponse")
	fd_MsgSwapExactAmountInResponse_token_out_amount = md_MsgSwapExactAmountInResponse.Fields().ByName("token_out_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgSwapExactAmountInResponse)(nil)

type fastReflection_MsgSwapExactAmountInResponse MsgSwapExactAmountInResponse

func (x *MsgSwapExactAmountInResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSwapExactAmountInResponse)(x)
}

func (x *MsgSwapExactAmountInResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSwapExactAmountInResponse_messageType fastReflection_MsgSwapExactAmountInResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgSwapExactAmountInResponse_messageType{}

type fastReflection_MsgSwapExactAmountInResponse_messageType struct{}

func (x fastReflection_MsgSwapExactAmountInResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSwapExactAmountInResponse)(nil)
}
func (x fastReflection_MsgSwapExactAmountInResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSwapExactAmountInResponse)
}
func (x fastReflection_MsgSwapExactAmountInResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSwapExactAmountInResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSwapExactAmountInResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSwapExactAmountInResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSwapExactAmountInResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgSwapExactAmountInResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSwapExactAmountInResponse) New() protoreflect.Message {
	return new(fastReflection_MsgSwapExactAmountInResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSwapExactAmountInResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgSwapExactAmountInResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSwapExactAmountInResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TokenOutAmount != "" {
		value := protoreflect.ValueOfString(x.TokenOutAmount)
		if !f(fd_MsgSwapExactAmountInResponse_token_out_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSwapExactAmountInResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse.token_out_amount":
		return x.TokenOutAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountInResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse.token_out_amount":
		x.TokenOutAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSwapExactAmountInResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse.token_out_amount":
		value := x.TokenOutAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountInResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse.token_out_amount":
		x.TokenOutAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountInResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse.token_out_amount":
		panic(fmt.Errorf("field token_out_amount of message osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSwapExactAmountInResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse.token_out_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSwapExactAmountInResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSwapExactAmountInResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountInResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSwapExactAmountInResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSwapExactAmountInResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSwapExactAmountInResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TokenOutAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSwapExactAmountInResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenOutAmount) > 0 {
			i -= len(x.TokenOutAmount)
			copy(dAtA[i:], x.TokenOutAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenOutAmount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSwapExactAmountInResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSwapExactAmountInResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSwapExactAmountInResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOutAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenOutAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SwapAmountOutRoute                protoreflect.MessageDescriptor
	fd_SwapAmountOutRoute_pool_id        protoreflect.FieldDescriptor
	fd_SwapAmountOutRoute_token_in_denom protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_SwapAmountOutRoute = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("SwapAmountOutRoute")
	fd_SwapAmountOutRoute_pool_id = md_SwapAmountOutRoute.Fields().ByName("pool_id")
	fd_SwapAmountOutRoute_token_in_denom = md_SwapAmountOutRoute.Fields().ByName("token_in_denom")
}

var _ protoreflect.Message = (*fastReflection_SwapAmountOutRoute)(nil)

type fastReflection_SwapAmountOutRoute SwapAmountOutRoute

func (x *SwapAmountOutRoute) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SwapAmountOutRoute)(x)
}

func (x *SwapAmountOutRoute) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SwapAmountOutRoute_messageType fastReflection_SwapAmountOutRoute_messageType
var _ protoreflect.MessageType = fastReflection_SwapAmountOutRoute_messageType{}

type fastReflection_SwapAmountOutRoute_messageType struct{}

func (x fastReflection_SwapAmountOutRoute_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SwapAmountOutRoute)(nil)
}
func (x fastReflection_SwapAmountOutRoute_messageType) New() protoreflect.Message {
	return new(fastReflection_SwapAmountOutRoute)
}
func (x fastReflection_SwapAmountOutRoute_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SwapAmountOutRoute
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SwapAmountOutRoute) Descriptor() protoreflect.MessageDescriptor {
	return md_SwapAmountOutRoute
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SwapAmountOutRoute) Type() protoreflect.MessageType {
	return _fastReflection_SwapAmountOutRoute_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SwapAmountOutRoute) New() protoreflect.Message {
	return new(fastReflection_SwapAmountOutRoute)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SwapAmountOutRoute) Interface() protoreflect.ProtoMessage {
	return (*SwapAmountOutRoute)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SwapAmountOutRoute) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_SwapAmountOutRoute_pool_id, value) {
			return
		}
	}
	if x.TokenInDenom != "" {
		value := protoreflect.ValueOfString(x.TokenInDenom)
		if !f(fd_SwapAmountOutRoute_token_in_denom, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SwapAmountOutRoute) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.pool_id":
		return x.PoolId != uint64(0)
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.token_in_denom":
		return x.TokenInDenom != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountOutRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountOutRoute does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapAmountOutRoute) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.pool_id":
		x.PoolId = uint64(0)
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.token_in_denom":
		x.TokenInDenom = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountOutRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountOutRoute does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SwapAmountOutRoute) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.token_in_denom":
		value := x.TokenInDenom
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountOutRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountOutRoute does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapAmountOutRoute) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.pool_id":
		x.PoolId = value.Uint()
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.token_in_denom":
		x.TokenInDenom = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountOutRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountOutRoute does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapAmountOutRoute) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.v1beta1.SwapAmountOutRoute is not mutable"))
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.token_in_denom":
		panic(fmt.Errorf("field token_in_denom of message osmosis.gamm.v1beta1.SwapAmountOutRoute is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountOutRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountOutRoute does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SwapAmountOutRoute) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "osmosis.gamm.v1beta1.SwapAmountOutRoute.token_in_denom":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.SwapAmountOutRoute"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.SwapAmountOutRoute does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SwapAmountOutRoute) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.SwapAmountOutRoute", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SwapAmountOutRoute) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SwapAmountOutRoute) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SwapAmountOutRoute) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SwapAmountOutRoute) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SwapAmountOutRoute)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.TokenInDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SwapAmountOutRoute)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenInDenom) > 0 {
			i -= len(x.TokenInDenom)
			copy(dAtA[i:], x.TokenInDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenInDenom)))
			i--
			dAtA[i] = 0x12
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SwapAmountOutRoute)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SwapAmountOutRoute: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SwapAmountOutRoute: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenInDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenInDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgSwapExactAmountOut_2_list)(nil)

type _MsgSwapExactAmountOut_2_list struct {
	list *[]*SwapAmountOutRoute
}

func (x *_MsgSwapExactAmountOut_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgSwapExactAmountOut_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgSwapExactAmountOut_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SwapAmountOutRoute)
	(*x.list)[i] = concreteValue
}

func (x *_MsgSwapExactAmountOut_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SwapAmountOutRoute)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgSwapExactAmountOut_2_list) AppendMutable() protoreflect.Value {
	v := new(SwapAmountOutRoute)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgSwapExactAmountOut_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgSwapExactAmountOut_2_list) NewElement() protoreflect.Value {
	v := new(SwapAmountOutRoute)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgSwapExactAmountOut_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgSwapExactAmountOut                     protoreflect.MessageDescriptor
	fd_MsgSwapExactAmountOut_sender              protoreflect.FieldDescriptor
	fd_MsgSwapExactAmountOut_routes              protoreflect.FieldDescriptor
	fd_MsgSwapExactAmountOut_token_in_max_amount protoreflect.FieldDescriptor
	fd_MsgSwapExactAmountOut_token_out           protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgSwapExactAmountOut = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgSwapExactAmountOut")
	fd_MsgSwapExactAmountOut_sender = md_MsgSwapExactAmountOut.Fields().ByName("sender")
	fd_MsgSwapExactAmountOut_routes = md_MsgSwapExactAmountOut.Fields().ByName("routes")
	fd_MsgSwapExactAmountOut_token_in_max_amount = md_MsgSwapExactAmountOut.Fields().ByName("token_in_max_amount")
	fd_MsgSwapExactAmountOut_token_out = md_MsgSwapExactAmountOut.Fields().ByName("token_out")
}

var _ protoreflect.Message = (*fastReflection_MsgSwapExactAmountOut)(nil)

type fastReflection_MsgSwapExactAmountOut MsgSwapExactAmountOut

func (x *MsgSwapExactAmountOut) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSwapExactAmountOut)(x)
}

func (x *MsgSwapExactAmountOut) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSwapExactAmountOut_messageType fastReflection_MsgSwapExactAmountOut_messageType
var _ protoreflect.MessageType = fastReflection_MsgSwapExactAmountOut_messageType{}

type fastReflection_MsgSwapExactAmountOut_messageType struct{}

func (x fastReflection_MsgSwapExactAmountOut_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSwapExactAmountOut)(nil)
}
func (x fastReflection_MsgSwapExactAmountOut_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSwapExactAmountOut)
}
func (x fastReflection_MsgSwapExactAmountOut_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSwapExactAmountOut
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSwapExactAmountOut) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSwapExactAmountOut
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSwapExactAmountOut) Type() protoreflect.MessageType {
	return _fastReflection_MsgSwapExactAmountOut_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSwapExactAmountOut) New() protoreflect.Message {
	return new(fastReflection_MsgSwapExactAmountOut)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSwapExactAmountOut) Interface() protoreflect.ProtoMessage {
	return (*MsgSwapExactAmountOut)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSwapExactAmountOut) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgSwapExactAmountOut_sender, value) {
			return
		}
	}
	if len(x.Routes) != 0 {
		value := protoreflect.ValueOfList(&_MsgSwapExactAmountOut_2_list{list: &x.Routes})
		if !f(fd_MsgSwapExactAmountOut_routes, value) {
			return
		}
	}
	if x.TokenInMaxAmount != "" {
		value := protoreflect.ValueOfString(x.TokenInMaxAmount)
		if !f(fd_MsgSwapExactAmountOut_token_in_max_amount, value) {
			return
		}
	}
	if x.TokenOut != nil {
		value := protoreflect.ValueOfMessage(x.TokenOut.ProtoReflect())
		if !f(fd_MsgSwapExactAmountOut_token_out, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSwapExactAmountOut) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.sender":
		return x.Sender != ""
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.routes":
		return len(x.Routes) != 0
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_in_max_amount":
		return x.TokenInMaxAmount != ""
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_out":
		return x.TokenOut != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOut does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountOut) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.sender":
		x.Sender = ""
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.routes":
		x.Routes = nil
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_in_max_amount":
		x.TokenInMaxAmount = ""
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_out":
		x.TokenOut = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOut does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSwapExactAmountOut) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.routes":
		if len(x.Routes) == 0 {
			return protoreflect.ValueOfList(&_MsgSwapExactAmountOut_2_list{})
		}
		listValue := &_MsgSwapExactAmountOut_2_list{list: &x.Routes}
		return protoreflect.ValueOfList(listValue)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_in_max_amount":
		value := x.TokenInMaxAmount
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_out":
		value := x.TokenOut
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOut does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountOut) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.routes":
		lv := value.List()
		clv := lv.(*_MsgSwapExactAmountOut_2_list)
		x.Routes = *clv.list
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_in_max_amount":
		x.TokenInMaxAmount = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_out":
		x.TokenOut = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOut does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountOut) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.routes":
		if x.Routes == nil {
			x.Routes = []*SwapAmountOutRoute{}
		}
		value := &_MsgSwapExactAmountOut_2_list{list: &x.Routes}
		return protoreflect.ValueOfList(value)
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_out":
		if x.TokenOut == nil {
			x.TokenOut = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.TokenOut.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.v1beta1.MsgSwapExactAmountOut is not mutable"))
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_in_max_amount":
		panic(fmt.Errorf("field token_in_max_amount of message osmosis.gamm.v1beta1.MsgSwapExactAmountOut is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOut does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSwapExactAmountOut) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.routes":
		list := []*SwapAmountOutRoute{}
		return protoreflect.ValueOfList(&_MsgSwapExactAmountOut_2_list{list: &list})
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_in_max_amount":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_out":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOut does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSwapExactAmountOut) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgSwapExactAmountOut", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSwapExactAmountOut) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountOut) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSwapExactAmountOut) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSwapExactAmountOut) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSwapExactAmountOut)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Routes) > 0 {
			for _, e := range x.Routes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.TokenInMaxAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TokenOut != nil {
			l = options.Size(x.TokenOut)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSwapExactAmountOut)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TokenOut != nil {
			encoded, err := options.Marshal(x.TokenOut)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TokenInMaxAmount) > 0 {
			i -= len(x.TokenInMaxAmount)
			copy(dAtA[i:], x.TokenInMaxAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenInMaxAmount)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Routes) > 0 {
			for iNdEx := len(x.Routes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Routes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSwapExactAmountOut)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSwapExactAmountOut: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSwapExactAmountOut: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Routes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Routes = append(x.Routes, &SwapAmountOutRoute{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Routes[len(x.Routes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenInMaxAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenInMaxAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOut", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TokenOut == nil {
					x.TokenOut = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenOut); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSwapExactAmountOutResponse                 protoreflect.MessageDescriptor
	fd_MsgSwapExactAmountOutResponse_token_in_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgSwapExactAmountOutResponse = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgSwapExactAmountOutResponse")
	fd_MsgSwapExactAmountOutResponse_token_in_amount = md_MsgSwapExactAmountOutResponse.Fields().ByName("token_in_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgSwapExactAmountOutResponse)(nil)

type fastReflection_MsgSwapExactAmountOutResponse MsgSwapExactAmountOutResponse

func (x *MsgSwapExactAmountOutResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSwapExactAmountOutResponse)(x)
}

func (x *MsgSwapExactAmountOutResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSwapExactAmountOutResponse_messageType fastReflection_MsgSwapExactAmountOutResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgSwapExactAmountOutResponse_messageType{}

type fastReflection_MsgSwapExactAmountOutResponse_messageType struct{}

func (x fastReflection_MsgSwapExactAmountOutResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSwapExactAmountOutResponse)(nil)
}
func (x fastReflection_MsgSwapExactAmountOutResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSwapExactAmountOutResponse)
}
func (x fastReflection_MsgSwapExactAmountOutResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSwapExactAmountOutResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSwapExactAmountOutResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSwapExactAmountOutResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSwapExactAmountOutResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgSwapExactAmountOutResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSwapExactAmountOutResponse) New() protoreflect.Message {
	return new(fastReflection_MsgSwapExactAmountOutResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSwapExactAmountOutResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgSwapExactAmountOutResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSwapExactAmountOutResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TokenInAmount != "" {
		value := protoreflect.ValueOfString(x.TokenInAmount)
		if !f(fd_MsgSwapExactAmountOutResponse_token_in_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSwapExactAmountOutResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse.token_in_amount":
		return x.TokenInAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountOutResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse.token_in_amount":
		x.TokenInAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSwapExactAmountOutResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse.token_in_amount":
		value := x.TokenInAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountOutResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse.token_in_amount":
		x.TokenInAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountOutResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse.token_in_amount":
		panic(fmt.Errorf("field token_in_amount of message osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSwapExactAmountOutResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse.token_in_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSwapExactAmountOutResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSwapExactAmountOutResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSwapExactAmountOutResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSwapExactAmountOutResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSwapExactAmountOutResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSwapExactAmountOutResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TokenInAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSwapExactAmountOutResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenInAmount) > 0 {
			i -= len(x.TokenInAmount)
			copy(dAtA[i:], x.TokenInAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenInAmount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSwapExactAmountOutResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSwapExactAmountOutResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSwapExactAmountOutResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenInAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenInAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgJoinSwapExternAmountIn                      protoreflect.MessageDescriptor
	fd_MsgJoinSwapExternAmountIn_sender               protoreflect.FieldDescriptor
	fd_MsgJoinSwapExternAmountIn_pool_id              protoreflect.FieldDescriptor
	fd_MsgJoinSwapExternAmountIn_token_in             protoreflect.FieldDescriptor
	fd_MsgJoinSwapExternAmountIn_share_out_min_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgJoinSwapExternAmountIn = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgJoinSwapExternAmountIn")
	fd_MsgJoinSwapExternAmountIn_sender = md_MsgJoinSwapExternAmountIn.Fields().ByName("sender")
	fd_MsgJoinSwapExternAmountIn_pool_id = md_MsgJoinSwapExternAmountIn.Fields().ByName("pool_id")
	fd_MsgJoinSwapExternAmountIn_token_in = md_MsgJoinSwapExternAmountIn.Fields().ByName("token_in")
	fd_MsgJoinSwapExternAmountIn_share_out_min_amount = md_MsgJoinSwapExternAmountIn.Fields().ByName("share_out_min_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgJoinSwapExternAmountIn)(nil)

type fastReflection_MsgJoinSwapExternAmountIn MsgJoinSwapExternAmountIn

func (x *MsgJoinSwapExternAmountIn) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgJoinSwapExternAmountIn)(x)
}

func (x *MsgJoinSwapExternAmountIn) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgJoinSwapExternAmountIn_messageType fastReflection_MsgJoinSwapExternAmountIn_messageType
var _ protoreflect.MessageType = fastReflection_MsgJoinSwapExternAmountIn_messageType{}

type fastReflection_MsgJoinSwapExternAmountIn_messageType struct{}

func (x fastReflection_MsgJoinSwapExternAmountIn_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgJoinSwapExternAmountIn)(nil)
}
func (x fastReflection_MsgJoinSwapExternAmountIn_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgJoinSwapExternAmountIn)
}
func (x fastReflection_MsgJoinSwapExternAmountIn_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinSwapExternAmountIn
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgJoinSwapExternAmountIn) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinSwapExternAmountIn
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgJoinSwapExternAmountIn) Type() protoreflect.MessageType {
	return _fastReflection_MsgJoinSwapExternAmountIn_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgJoinSwapExternAmountIn) New() protoreflect.Message {
	return new(fastReflection_MsgJoinSwapExternAmountIn)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgJoinSwapExternAmountIn) Interface() protoreflect.ProtoMessage {
	return (*MsgJoinSwapExternAmountIn)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgJoinSwapExternAmountIn) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgJoinSwapExternAmountIn_sender, value) {
			return
		}
	}
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgJoinSwapExternAmountIn_pool_id, value) {
			return
		}
	}
	if x.TokenIn != nil {
		value := protoreflect.ValueOfMessage(x.TokenIn.ProtoReflect())
		if !f(fd_MsgJoinSwapExternAmountIn_token_in, value) {
			return
		}
	}
	if x.ShareOutMinAmount != "" {
		value := protoreflect.ValueOfString(x.ShareOutMinAmount)
		if !f(fd_MsgJoinSwapExternAmountIn_share_out_min_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgJoinSwapExternAmountIn) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.sender":
		return x.Sender != ""
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.pool_id":
		return x.PoolId != uint64(0)
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.token_in":
		return x.TokenIn != nil
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.share_out_min_amount":
		return x.ShareOutMinAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapExternAmountIn) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.sender":
		x.Sender = ""
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.pool_id":
		x.PoolId = uint64(0)
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.token_in":
		x.TokenIn = nil
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.share_out_min_amount":
		x.ShareOutMinAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgJoinSwapExternAmountIn) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.token_in":
		value := x.TokenIn
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.share_out_min_amount":
		value := x.ShareOutMinAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapExternAmountIn) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.pool_id":
		x.PoolId = value.Uint()
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.token_in":
		x.TokenIn = value.Message().Interface().(*v1beta1.Coin)
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.share_out_min_amount":
		x.ShareOutMinAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapExternAmountIn) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.token_in":
		if x.TokenIn == nil {
			x.TokenIn = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.TokenIn.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn is not mutable"))
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn is not mutable"))
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.share_out_min_amount":
		panic(fmt.Errorf("field share_out_min_amount of message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgJoinSwapExternAmountIn) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.token_in":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.share_out_min_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgJoinSwapExternAmountIn) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgJoinSwapExternAmountIn) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapExternAmountIn) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgJoinSwapExternAmountIn) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgJoinSwapExternAmountIn) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgJoinSwapExternAmountIn)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		if x.TokenIn != nil {
			l = options.Size(x.TokenIn)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ShareOutMinAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinSwapExternAmountIn)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ShareOutMinAmount) > 0 {
			i -= len(x.ShareOutMinAmount)
			copy(dAtA[i:], x.ShareOutMinAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareOutMinAmount)))
			i--
			dAtA[i] = 0x22
		}
		if x.TokenIn != nil {
			encoded, err := options.Marshal(x.TokenIn)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinSwapExternAmountIn)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinSwapExternAmountIn: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinSwapExternAmountIn: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenIn", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TokenIn == nil {
					x.TokenIn = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenIn); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareOutMinAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareOutMinAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgJoinSwapExternAmountInResponse                  protoreflect.MessageDescriptor
	fd_MsgJoinSwapExternAmountInResponse_share_out_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgJoinSwapExternAmountInResponse = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgJoinSwapExternAmountInResponse")
	fd_MsgJoinSwapExternAmountInResponse_share_out_amount = md_MsgJoinSwapExternAmountInResponse.Fields().ByName("share_out_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgJoinSwapExternAmountInResponse)(nil)

type fastReflection_MsgJoinSwapExternAmountInResponse MsgJoinSwapExternAmountInResponse

func (x *MsgJoinSwapExternAmountInResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgJoinSwapExternAmountInResponse)(x)
}

func (x *MsgJoinSwapExternAmountInResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgJoinSwapExternAmountInResponse_messageType fastReflection_MsgJoinSwapExternAmountInResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgJoinSwapExternAmountInResponse_messageType{}

type fastReflection_MsgJoinSwapExternAmountInResponse_messageType struct{}

func (x fastReflection_MsgJoinSwapExternAmountInResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgJoinSwapExternAmountInResponse)(nil)
}
func (x fastReflection_MsgJoinSwapExternAmountInResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgJoinSwapExternAmountInResponse)
}
func (x fastReflection_MsgJoinSwapExternAmountInResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinSwapExternAmountInResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinSwapExternAmountInResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgJoinSwapExternAmountInResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) New() protoreflect.Message {
	return new(fastReflection_MsgJoinSwapExternAmountInResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgJoinSwapExternAmountInResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ShareOutAmount != "" {
		value := protoreflect.ValueOfString(x.ShareOutAmount)
		if !f(fd_MsgJoinSwapExternAmountInResponse_share_out_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse.share_out_amount":
		return x.ShareOutAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse.share_out_amount":
		x.ShareOutAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse.share_out_amount":
		value := x.ShareOutAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse.share_out_amount":
		x.ShareOutAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse.share_out_amount":
		panic(fmt.Errorf("field share_out_amount of message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse.share_out_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgJoinSwapExternAmountInResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgJoinSwapExternAmountInResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ShareOutAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinSwapExternAmountInResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ShareOutAmount) > 0 {
			i -= len(x.ShareOutAmount)
			copy(dAtA[i:], x.ShareOutAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareOutAmount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinSwapExternAmountInResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinSwapExternAmountInResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinSwapExternAmountInResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareOutAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareOutAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgJoinSwapShareAmountOut                     protoreflect.MessageDescriptor
	fd_MsgJoinSwapShareAmountOut_sender              protoreflect.FieldDescriptor
	fd_MsgJoinSwapShareAmountOut_pool_id             protoreflect.FieldDescriptor
	fd_MsgJoinSwapShareAmountOut_token_in_denom      protoreflect.FieldDescriptor
	fd_MsgJoinSwapShareAmountOut_share_out_amount    protoreflect.FieldDescriptor
	fd_MsgJoinSwapShareAmountOut_token_in_max_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgJoinSwapShareAmountOut = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgJoinSwapShareAmountOut")
	fd_MsgJoinSwapShareAmountOut_sender = md_MsgJoinSwapShareAmountOut.Fields().ByName("sender")
	fd_MsgJoinSwapShareAmountOut_pool_id = md_MsgJoinSwapShareAmountOut.Fields().ByName("pool_id")
	fd_MsgJoinSwapShareAmountOut_token_in_denom = md_MsgJoinSwapShareAmountOut.Fields().ByName("token_in_denom")
	fd_MsgJoinSwapShareAmountOut_share_out_amount = md_MsgJoinSwapShareAmountOut.Fields().ByName("share_out_amount")
	fd_MsgJoinSwapShareAmountOut_token_in_max_amount = md_MsgJoinSwapShareAmountOut.Fields().ByName("token_in_max_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgJoinSwapShareAmountOut)(nil)

type fastReflection_MsgJoinSwapShareAmountOut MsgJoinSwapShareAmountOut

func (x *MsgJoinSwapShareAmountOut) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgJoinSwapShareAmountOut)(x)
}

func (x *MsgJoinSwapShareAmountOut) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgJoinSwapShareAmountOut_messageType fastReflection_MsgJoinSwapShareAmountOut_messageType
var _ protoreflect.MessageType = fastReflection_MsgJoinSwapShareAmountOut_messageType{}

type fastReflection_MsgJoinSwapShareAmountOut_messageType struct{}

func (x fastReflection_MsgJoinSwapShareAmountOut_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgJoinSwapShareAmountOut)(nil)
}
func (x fastReflection_MsgJoinSwapShareAmountOut_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgJoinSwapShareAmountOut)
}
func (x fastReflection_MsgJoinSwapShareAmountOut_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinSwapShareAmountOut
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgJoinSwapShareAmountOut) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinSwapShareAmountOut
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgJoinSwapShareAmountOut) Type() protoreflect.MessageType {
	return _fastReflection_MsgJoinSwapShareAmountOut_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgJoinSwapShareAmountOut) New() protoreflect.Message {
	return new(fastReflection_MsgJoinSwapShareAmountOut)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgJoinSwapShareAmountOut) Interface() protoreflect.ProtoMessage {
	return (*MsgJoinSwapShareAmountOut)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgJoinSwapShareAmountOut) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgJoinSwapShareAmountOut_sender, value) {
			return
		}
	}
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgJoinSwapShareAmountOut_pool_id, value) {
			return
		}
	}
	if x.TokenInDenom != "" {
		value := protoreflect.ValueOfString(x.TokenInDenom)
		if !f(fd_MsgJoinSwapShareAmountOut_token_in_denom, value) {
			return
		}
	}
	if x.ShareOutAmount != "" {
		value := protoreflect.ValueOfString(x.ShareOutAmount)
		if !f(fd_MsgJoinSwapShareAmountOut_share_out_amount, value) {
			return
		}
	}
	if x.TokenInMaxAmount != "" {
		value := protoreflect.ValueOfString(x.TokenInMaxAmount)
		if !f(fd_MsgJoinSwapShareAmountOut_token_in_max_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgJoinSwapShareAmountOut) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.sender":
		return x.Sender != ""
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.pool_id":
		return x.PoolId != uint64(0)
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_denom":
		return x.TokenInDenom != ""
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.share_out_amount":
		return x.ShareOutAmount != ""
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_max_amount":
		return x.TokenInMaxAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapShareAmountOut) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.sender":
		x.Sender = ""
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.pool_id":
		x.PoolId = uint64(0)
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_denom":
		x.TokenInDenom = ""
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.share_out_amount":
		x.ShareOutAmount = ""
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_max_amount":
		x.TokenInMaxAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgJoinSwapShareAmountOut) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_denom":
		value := x.TokenInDenom
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.share_out_amount":
		value := x.ShareOutAmount
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_max_amount":
		value := x.TokenInMaxAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapShareAmountOut) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.pool_id":
		x.PoolId = value.Uint()
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_denom":
		x.TokenInDenom = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.share_out_amount":
		x.ShareOutAmount = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_max_amount":
		x.TokenInMaxAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapShareAmountOut) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut is not mutable"))
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut is not mutable"))
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_denom":
		panic(fmt.Errorf("field token_in_denom of message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut is not mutable"))
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.share_out_amount":
		panic(fmt.Errorf("field share_out_amount of message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut is not mutable"))
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_max_amount":
		panic(fmt.Errorf("field token_in_max_amount of message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgJoinSwapShareAmountOut) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_denom":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.share_out_amount":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.token_in_max_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgJoinSwapShareAmountOut) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgJoinSwapShareAmountOut) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapShareAmountOut) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgJoinSwapShareAmountOut) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgJoinSwapShareAmountOut) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgJoinSwapShareAmountOut)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.TokenInDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ShareOutAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TokenInMaxAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinSwapShareAmountOut)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenInMaxAmount) > 0 {
			i -= len(x.TokenInMaxAmount)
			copy(dAtA[i:], x.TokenInMaxAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenInMaxAmount)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ShareOutAmount) > 0 {
			i -= len(x.ShareOutAmount)
			copy(dAtA[i:], x.ShareOutAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareOutAmount)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TokenInDenom) > 0 {
			i -= len(x.TokenInDenom)
			copy(dAtA[i:], x.TokenInDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenInDenom)))
			i--
			dAtA[i] = 0x1a
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinSwapShareAmountOut)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinSwapShareAmountOut: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinSwapShareAmountOut: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenInDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenInDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareOutAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareOutAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenInMaxAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenInMaxAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgJoinSwapShareAmountOutResponse                 protoreflect.MessageDescriptor
	fd_MsgJoinSwapShareAmountOutResponse_token_in_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgJoinSwapShareAmountOutResponse = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgJoinSwapShareAmountOutResponse")
	fd_MsgJoinSwapShareAmountOutResponse_token_in_amount = md_MsgJoinSwapShareAmountOutResponse.Fields().ByName("token_in_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgJoinSwapShareAmountOutResponse)(nil)

type fastReflection_MsgJoinSwapShareAmountOutResponse MsgJoinSwapShareAmountOutResponse

func (x *MsgJoinSwapShareAmountOutResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgJoinSwapShareAmountOutResponse)(x)
}

func (x *MsgJoinSwapShareAmountOutResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgJoinSwapShareAmountOutResponse_messageType fastReflection_MsgJoinSwapShareAmountOutResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgJoinSwapShareAmountOutResponse_messageType{}

type fastReflection_MsgJoinSwapShareAmountOutResponse_messageType struct{}

func (x fastReflection_MsgJoinSwapShareAmountOutResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgJoinSwapShareAmountOutResponse)(nil)
}
func (x fastReflection_MsgJoinSwapShareAmountOutResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgJoinSwapShareAmountOutResponse)
}
func (x fastReflection_MsgJoinSwapShareAmountOutResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinSwapShareAmountOutResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgJoinSwapShareAmountOutResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgJoinSwapShareAmountOutResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) New() protoreflect.Message {
	return new(fastReflection_MsgJoinSwapShareAmountOutResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgJoinSwapShareAmountOutResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TokenInAmount != "" {
		value := protoreflect.ValueOfString(x.TokenInAmount)
		if !f(fd_MsgJoinSwapShareAmountOutResponse_token_in_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse.token_in_amount":
		return x.TokenInAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse.token_in_amount":
		x.TokenInAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse.token_in_amount":
		value := x.TokenInAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse.token_in_amount":
		x.TokenInAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse.token_in_amount":
		panic(fmt.Errorf("field token_in_amount of message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse.token_in_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgJoinSwapShareAmountOutResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgJoinSwapShareAmountOutResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TokenInAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinSwapShareAmountOutResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenInAmount) > 0 {
			i -= len(x.TokenInAmount)
			copy(dAtA[i:], x.TokenInAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenInAmount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgJoinSwapShareAmountOutResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinSwapShareAmountOutResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgJoinSwapShareAmountOutResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenInAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenInAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgExitSwapShareAmountIn                      protoreflect.MessageDescriptor
	fd_MsgExitSwapShareAmountIn_sender               protoreflect.FieldDescriptor
	fd_MsgExitSwapShareAmountIn_pool_id              protoreflect.FieldDescriptor
	fd_MsgExitSwapShareAmountIn_token_out_denom      protoreflect.FieldDescriptor
	fd_MsgExitSwapShareAmountIn_share_in_amount      protoreflect.FieldDescriptor
	fd_MsgExitSwapShareAmountIn_token_out_min_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgExitSwapShareAmountIn = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgExitSwapShareAmountIn")
	fd_MsgExitSwapShareAmountIn_sender = md_MsgExitSwapShareAmountIn.Fields().ByName("sender")
	fd_MsgExitSwapShareAmountIn_pool_id = md_MsgExitSwapShareAmountIn.Fields().ByName("pool_id")
	fd_MsgExitSwapShareAmountIn_token_out_denom = md_MsgExitSwapShareAmountIn.Fields().ByName("token_out_denom")
	fd_MsgExitSwapShareAmountIn_share_in_amount = md_MsgExitSwapShareAmountIn.Fields().ByName("share_in_amount")
	fd_MsgExitSwapShareAmountIn_token_out_min_amount = md_MsgExitSwapShareAmountIn.Fields().ByName("token_out_min_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgExitSwapShareAmountIn)(nil)

type fastReflection_MsgExitSwapShareAmountIn MsgExitSwapShareAmountIn

func (x *MsgExitSwapShareAmountIn) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgExitSwapShareAmountIn)(x)
}

func (x *MsgExitSwapShareAmountIn) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgExitSwapShareAmountIn_messageType fastReflection_MsgExitSwapShareAmountIn_messageType
var _ protoreflect.MessageType = fastReflection_MsgExitSwapShareAmountIn_messageType{}

type fastReflection_MsgExitSwapShareAmountIn_messageType struct{}

func (x fastReflection_MsgExitSwapShareAmountIn_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgExitSwapShareAmountIn)(nil)
}
func (x fastReflection_MsgExitSwapShareAmountIn_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgExitSwapShareAmountIn)
}
func (x fastReflection_MsgExitSwapShareAmountIn_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitSwapShareAmountIn
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgExitSwapShareAmountIn) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitSwapShareAmountIn
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgExitSwapShareAmountIn) Type() protoreflect.MessageType {
	return _fastReflection_MsgExitSwapShareAmountIn_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgExitSwapShareAmountIn) New() protoreflect.Message {
	return new(fastReflection_MsgExitSwapShareAmountIn)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgExitSwapShareAmountIn) Interface() protoreflect.ProtoMessage {
	return (*MsgExitSwapShareAmountIn)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgExitSwapShareAmountIn) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgExitSwapShareAmountIn_sender, value) {
			return
		}
	}
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgExitSwapShareAmountIn_pool_id, value) {
			return
		}
	}
	if x.TokenOutDenom != "" {
		value := protoreflect.ValueOfString(x.TokenOutDenom)
		if !f(fd_MsgExitSwapShareAmountIn_token_out_denom, value) {
			return
		}
	}
	if x.ShareInAmount != "" {
		value := protoreflect.ValueOfString(x.ShareInAmount)
		if !f(fd_MsgExitSwapShareAmountIn_share_in_amount, value) {
			return
		}
	}
	if x.TokenOutMinAmount != "" {
		value := protoreflect.ValueOfString(x.TokenOutMinAmount)
		if !f(fd_MsgExitSwapShareAmountIn_token_out_min_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgExitSwapShareAmountIn) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.sender":
		return x.Sender != ""
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.pool_id":
		return x.PoolId != uint64(0)
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_denom":
		return x.TokenOutDenom != ""
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.share_in_amount":
		return x.ShareInAmount != ""
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_min_amount":
		return x.TokenOutMinAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapShareAmountIn) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.sender":
		x.Sender = ""
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.pool_id":
		x.PoolId = uint64(0)
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_denom":
		x.TokenOutDenom = ""
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.share_in_amount":
		x.ShareInAmount = ""
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_min_amount":
		x.TokenOutMinAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgExitSwapShareAmountIn) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_denom":
		value := x.TokenOutDenom
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.share_in_amount":
		value := x.ShareInAmount
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_min_amount":
		value := x.TokenOutMinAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapShareAmountIn) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.pool_id":
		x.PoolId = value.Uint()
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_denom":
		x.TokenOutDenom = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.share_in_amount":
		x.ShareInAmount = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_min_amount":
		x.TokenOutMinAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapShareAmountIn) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn is not mutable"))
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn is not mutable"))
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_denom":
		panic(fmt.Errorf("field token_out_denom of message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn is not mutable"))
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.share_in_amount":
		panic(fmt.Errorf("field share_in_amount of message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn is not mutable"))
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_min_amount":
		panic(fmt.Errorf("field token_out_min_amount of message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgExitSwapShareAmountIn) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_denom":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.share_in_amount":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.token_out_min_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgExitSwapShareAmountIn) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgExitSwapShareAmountIn) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapShareAmountIn) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgExitSwapShareAmountIn) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgExitSwapShareAmountIn) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgExitSwapShareAmountIn)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.TokenOutDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ShareInAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TokenOutMinAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitSwapShareAmountIn)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenOutMinAmount) > 0 {
			i -= len(x.TokenOutMinAmount)
			copy(dAtA[i:], x.TokenOutMinAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenOutMinAmount)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ShareInAmount) > 0 {
			i -= len(x.ShareInAmount)
			copy(dAtA[i:], x.ShareInAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareInAmount)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.TokenOutDenom) > 0 {
			i -= len(x.TokenOutDenom)
			copy(dAtA[i:], x.TokenOutDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenOutDenom)))
			i--
			dAtA[i] = 0x1a
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitSwapShareAmountIn)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitSwapShareAmountIn: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitSwapShareAmountIn: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOutDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenOutDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareInAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareInAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOutMinAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenOutMinAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgExitSwapShareAmountInResponse                  protoreflect.MessageDescriptor
	fd_MsgExitSwapShareAmountInResponse_token_out_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgExitSwapShareAmountInResponse = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgExitSwapShareAmountInResponse")
	fd_MsgExitSwapShareAmountInResponse_token_out_amount = md_MsgExitSwapShareAmountInResponse.Fields().ByName("token_out_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgExitSwapShareAmountInResponse)(nil)

type fastReflection_MsgExitSwapShareAmountInResponse MsgExitSwapShareAmountInResponse

func (x *MsgExitSwapShareAmountInResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgExitSwapShareAmountInResponse)(x)
}

func (x *MsgExitSwapShareAmountInResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgExitSwapShareAmountInResponse_messageType fastReflection_MsgExitSwapShareAmountInResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgExitSwapShareAmountInResponse_messageType{}

type fastReflection_MsgExitSwapShareAmountInResponse_messageType struct{}

func (x fastReflection_MsgExitSwapShareAmountInResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgExitSwapShareAmountInResponse)(nil)
}
func (x fastReflection_MsgExitSwapShareAmountInResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgExitSwapShareAmountInResponse)
}
func (x fastReflection_MsgExitSwapShareAmountInResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitSwapShareAmountInResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitSwapShareAmountInResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgExitSwapShareAmountInResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) New() protoreflect.Message {
	return new(fastReflection_MsgExitSwapShareAmountInResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgExitSwapShareAmountInResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TokenOutAmount != "" {
		value := protoreflect.ValueOfString(x.TokenOutAmount)
		if !f(fd_MsgExitSwapShareAmountInResponse_token_out_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse.token_out_amount":
		return x.TokenOutAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse.token_out_amount":
		x.TokenOutAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse.token_out_amount":
		value := x.TokenOutAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse.token_out_amount":
		x.TokenOutAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse.token_out_amount":
		panic(fmt.Errorf("field token_out_amount of message osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse.token_out_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgExitSwapShareAmountInResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgExitSwapShareAmountInResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TokenOutAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitSwapShareAmountInResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TokenOutAmount) > 0 {
			i -= len(x.TokenOutAmount)
			copy(dAtA[i:], x.TokenOutAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenOutAmount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitSwapShareAmountInResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitSwapShareAmountInResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitSwapShareAmountInResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOutAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenOutAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgExitSwapExternAmountOut                     protoreflect.MessageDescriptor
	fd_MsgExitSwapExternAmountOut_sender              protoreflect.FieldDescriptor
	fd_MsgExitSwapExternAmountOut_pool_id             protoreflect.FieldDescriptor
	fd_MsgExitSwapExternAmountOut_token_out           protoreflect.FieldDescriptor
	fd_MsgExitSwapExternAmountOut_share_in_max_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgExitSwapExternAmountOut = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgExitSwapExternAmountOut")
	fd_MsgExitSwapExternAmountOut_sender = md_MsgExitSwapExternAmountOut.Fields().ByName("sender")
	fd_MsgExitSwapExternAmountOut_pool_id = md_MsgExitSwapExternAmountOut.Fields().ByName("pool_id")
	fd_MsgExitSwapExternAmountOut_token_out = md_MsgExitSwapExternAmountOut.Fields().ByName("token_out")
	fd_MsgExitSwapExternAmountOut_share_in_max_amount = md_MsgExitSwapExternAmountOut.Fields().ByName("share_in_max_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgExitSwapExternAmountOut)(nil)

type fastReflection_MsgExitSwapExternAmountOut MsgExitSwapExternAmountOut

func (x *MsgExitSwapExternAmountOut) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgExitSwapExternAmountOut)(x)
}

func (x *MsgExitSwapExternAmountOut) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgExitSwapExternAmountOut_messageType fastReflection_MsgExitSwapExternAmountOut_messageType
var _ protoreflect.MessageType = fastReflection_MsgExitSwapExternAmountOut_messageType{}

type fastReflection_MsgExitSwapExternAmountOut_messageType struct{}

func (x fastReflection_MsgExitSwapExternAmountOut_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgExitSwapExternAmountOut)(nil)
}
func (x fastReflection_MsgExitSwapExternAmountOut_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgExitSwapExternAmountOut)
}
func (x fastReflection_MsgExitSwapExternAmountOut_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitSwapExternAmountOut
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgExitSwapExternAmountOut) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitSwapExternAmountOut
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgExitSwapExternAmountOut) Type() protoreflect.MessageType {
	return _fastReflection_MsgExitSwapExternAmountOut_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgExitSwapExternAmountOut) New() protoreflect.Message {
	return new(fastReflection_MsgExitSwapExternAmountOut)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgExitSwapExternAmountOut) Interface() protoreflect.ProtoMessage {
	return (*MsgExitSwapExternAmountOut)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgExitSwapExternAmountOut) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgExitSwapExternAmountOut_sender, value) {
			return
		}
	}
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_MsgExitSwapExternAmountOut_pool_id, value) {
			return
		}
	}
	if x.TokenOut != nil {
		value := protoreflect.ValueOfMessage(x.TokenOut.ProtoReflect())
		if !f(fd_MsgExitSwapExternAmountOut_token_out, value) {
			return
		}
	}
	if x.ShareInMaxAmount != "" {
		value := protoreflect.ValueOfString(x.ShareInMaxAmount)
		if !f(fd_MsgExitSwapExternAmountOut_share_in_max_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgExitSwapExternAmountOut) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.sender":
		return x.Sender != ""
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.pool_id":
		return x.PoolId != uint64(0)
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.token_out":
		return x.TokenOut != nil
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.share_in_max_amount":
		return x.ShareInMaxAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapExternAmountOut) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.sender":
		x.Sender = ""
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.pool_id":
		x.PoolId = uint64(0)
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.token_out":
		x.TokenOut = nil
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.share_in_max_amount":
		x.ShareInMaxAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgExitSwapExternAmountOut) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.token_out":
		value := x.TokenOut
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.share_in_max_amount":
		value := x.ShareInMaxAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapExternAmountOut) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.sender":
		x.Sender = value.Interface().(string)
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.pool_id":
		x.PoolId = value.Uint()
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.token_out":
		x.TokenOut = value.Message().Interface().(*v1beta1.Coin)
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.share_in_max_amount":
		x.ShareInMaxAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapExternAmountOut) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.token_out":
		if x.TokenOut == nil {
			x.TokenOut = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.TokenOut.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.sender":
		panic(fmt.Errorf("field sender of message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut is not mutable"))
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.pool_id":
		panic(fmt.Errorf("field pool_id of message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut is not mutable"))
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.share_in_max_amount":
		panic(fmt.Errorf("field share_in_max_amount of message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgExitSwapExternAmountOut) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.sender":
		return protoreflect.ValueOfString("")
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.token_out":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.share_in_max_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgExitSwapExternAmountOut) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgExitSwapExternAmountOut) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapExternAmountOut) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgExitSwapExternAmountOut) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgExitSwapExternAmountOut) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgExitSwapExternAmountOut)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		if x.TokenOut != nil {
			l = options.Size(x.TokenOut)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ShareInMaxAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitSwapExternAmountOut)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ShareInMaxAmount) > 0 {
			i -= len(x.ShareInMaxAmount)
			copy(dAtA[i:], x.ShareInMaxAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareInMaxAmount)))
			i--
			dAtA[i] = 0x22
		}
		if x.TokenOut != nil {
			encoded, err := options.Marshal(x.TokenOut)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitSwapExternAmountOut)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitSwapExternAmountOut: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitSwapExternAmountOut: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenOut", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TokenOut == nil {
					x.TokenOut = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TokenOut); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareInMaxAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareInMaxAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgExitSwapExternAmountOutResponse                 protoreflect.MessageDescriptor
	fd_MsgExitSwapExternAmountOutResponse_share_in_amount protoreflect.FieldDescriptor
)

func init() {
	file_osmosis_gamm_v1beta1_tx_proto_init()
	md_MsgExitSwapExternAmountOutResponse = File_osmosis_gamm_v1beta1_tx_proto.Messages().ByName("MsgExitSwapExternAmountOutResponse")
	fd_MsgExitSwapExternAmountOutResponse_share_in_amount = md_MsgExitSwapExternAmountOutResponse.Fields().ByName("share_in_amount")
}

var _ protoreflect.Message = (*fastReflection_MsgExitSwapExternAmountOutResponse)(nil)

type fastReflection_MsgExitSwapExternAmountOutResponse MsgExitSwapExternAmountOutResponse

func (x *MsgExitSwapExternAmountOutResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgExitSwapExternAmountOutResponse)(x)
}

func (x *MsgExitSwapExternAmountOutResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgExitSwapExternAmountOutResponse_messageType fastReflection_MsgExitSwapExternAmountOutResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgExitSwapExternAmountOutResponse_messageType{}

type fastReflection_MsgExitSwapExternAmountOutResponse_messageType struct{}

func (x fastReflection_MsgExitSwapExternAmountOutResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgExitSwapExternAmountOutResponse)(nil)
}
func (x fastReflection_MsgExitSwapExternAmountOutResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgExitSwapExternAmountOutResponse)
}
func (x fastReflection_MsgExitSwapExternAmountOutResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitSwapExternAmountOutResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExitSwapExternAmountOutResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgExitSwapExternAmountOutResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) New() protoreflect.Message {
	return new(fastReflection_MsgExitSwapExternAmountOutResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgExitSwapExternAmountOutResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ShareInAmount != "" {
		value := protoreflect.ValueOfString(x.ShareInAmount)
		if !f(fd_MsgExitSwapExternAmountOutResponse_share_in_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse.share_in_amount":
		return x.ShareInAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse.share_in_amount":
		x.ShareInAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse.share_in_amount":
		value := x.ShareInAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse.share_in_amount":
		x.ShareInAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse.share_in_amount":
		panic(fmt.Errorf("field share_in_amount of message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse.share_in_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse"))
		}
		panic(fmt.Errorf("message osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgExitSwapExternAmountOutResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgExitSwapExternAmountOutResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ShareInAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitSwapExternAmountOutResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ShareInAmount) > 0 {
			i -= len(x.ShareInAmount)
			copy(dAtA[i:], x.ShareInAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareInAmount)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgExitSwapExternAmountOutResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitSwapExternAmountOutResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExitSwapExternAmountOutResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareInAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareInAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: osmosis/gamm/v1beta1/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ===================== MsgJoinPool
// This is really MsgJoinPoolNoSwap
type MsgJoinPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender         string          `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	PoolId         uint64          `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	ShareOutAmount string          `protobuf:"bytes,3,opt,name=share_out_amount,json=shareOutAmount,proto3" json:"share_out_amount,omitempty"`
	TokenInMaxs    []*v1beta1.Coin `protobuf:"bytes,4,rep,name=token_in_maxs,json=tokenInMaxs,proto3" json:"token_in_maxs,omitempty"`
}

func (x *MsgJoinPool) Reset() {
	*x = MsgJoinPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgJoinPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgJoinPool) ProtoMessage() {}

// Deprecated: Use MsgJoinPool.ProtoReflect.Descriptor instead.
func (*MsgJoinPool) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgJoinPool) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgJoinPool) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *MsgJoinPool) GetShareOutAmount() string {
	if x != nil {
		return x.ShareOutAmount
	}
	return ""
}

func (x *MsgJoinPool) GetTokenInMaxs() []*v1beta1.Coin {
	if x != nil {
		return x.TokenInMaxs
	}
	return nil
}

type MsgJoinPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareOutAmount string          `protobuf:"bytes,1,opt,name=share_out_amount,json=shareOutAmount,proto3" json:"share_out_amount,omitempty"`
	TokenIn        []*v1beta1.Coin `protobuf:"bytes,2,rep,name=token_in,json=tokenIn,proto3" json:"token_in,omitempty"`
}

func (x *MsgJoinPoolResponse) Reset() {
	*x = MsgJoinPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgJoinPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgJoinPoolResponse) ProtoMessage() {}

// Deprecated: Use MsgJoinPoolResponse.ProtoReflect.Descriptor instead.
func (*MsgJoinPoolResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{1}
}

func (x *MsgJoinPoolResponse) GetShareOutAmount() string {
	if x != nil {
		return x.ShareOutAmount
	}
	return ""
}

func (x *MsgJoinPoolResponse) GetTokenIn() []*v1beta1.Coin {
	if x != nil {
		return x.TokenIn
	}
	return nil
}

// ===================== MsgExitPool
type MsgExitPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender        string          `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	PoolId        uint64          `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	ShareInAmount string          `protobuf:"bytes,3,opt,name=share_in_amount,json=shareInAmount,proto3" json:"share_in_amount,omitempty"`
	TokenOutMins  []*v1beta1.Coin `protobuf:"bytes,4,rep,name=token_out_mins,json=tokenOutMins,proto3" json:"token_out_mins,omitempty"`
}

func (x *MsgExitPool) Reset() {
	*x = MsgExitPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExitPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExitPool) ProtoMessage() {}

// Deprecated: Use MsgExitPool.ProtoReflect.Descriptor instead.
func (*MsgExitPool) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgExitPool) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgExitPool) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *MsgExitPool) GetShareInAmount() string {
	if x != nil {
		return x.ShareInAmount
	}
	return ""
}

func (x *MsgExitPool) GetTokenOutMins() []*v1beta1.Coin {
	if x != nil {
		return x.TokenOutMins
	}
	return nil
}

type MsgExitPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenOut []*v1beta1.Coin `protobuf:"bytes,1,rep,name=token_out,json=tokenOut,proto3" json:"token_out,omitempty"`
}

func (x *MsgExitPoolResponse) Reset() {
	*x = MsgExitPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExitPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExitPoolResponse) ProtoMessage() {}

// Deprecated: Use MsgExitPoolResponse.ProtoReflect.Descriptor instead.
func (*MsgExitPoolResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgExitPoolResponse) GetTokenOut() []*v1beta1.Coin {
	if x != nil {
		return x.TokenOut
	}
	return nil
}

// ===================== MsgSwapExactAmountIn
type SwapAmountInRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId        uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	TokenOutDenom string `protobuf:"bytes,2,opt,name=token_out_denom,json=tokenOutDenom,proto3" json:"token_out_denom,omitempty"`
}

func (x *SwapAmountInRoute) Reset() {
	*x = SwapAmountInRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapAmountInRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapAmountInRoute) ProtoMessage() {}

// Deprecated: Use SwapAmountInRoute.ProtoReflect.Descriptor instead.
func (*SwapAmountInRoute) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *SwapAmountInRoute) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *SwapAmountInRoute) GetTokenOutDenom() string {
	if x != nil {
		return x.TokenOutDenom
	}
	return ""
}

type MsgSwapExactAmountIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender            string               `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Routes            []*SwapAmountInRoute `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	TokenIn           *v1beta1.Coin        `protobuf:"bytes,3,opt,name=token_in,json=tokenIn,proto3" json:"token_in,omitempty"`
	TokenOutMinAmount string               `protobuf:"bytes,4,opt,name=token_out_min_amount,json=tokenOutMinAmount,proto3" json:"token_out_min_amount,omitempty"`
}

func (x *MsgSwapExactAmountIn) Reset() {
	*x = MsgSwapExactAmountIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSwapExactAmountIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSwapExactAmountIn) ProtoMessage() {}

// Deprecated: Use MsgSwapExactAmountIn.ProtoReflect.Descriptor instead.
func (*MsgSwapExactAmountIn) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgSwapExactAmountIn) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgSwapExactAmountIn) GetRoutes() []*SwapAmountInRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *MsgSwapExactAmountIn) GetTokenIn() *v1beta1.Coin {
	if x != nil {
		return x.TokenIn
	}
	return nil
}

func (x *MsgSwapExactAmountIn) GetTokenOutMinAmount() string {
	if x != nil {
		return x.TokenOutMinAmount
	}
	return ""
}

type MsgSwapExactAmountInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenOutAmount string `protobuf:"bytes,1,opt,name=token_out_amount,json=tokenOutAmount,proto3" json:"token_out_amount,omitempty"`
}

func (x *MsgSwapExactAmountInResponse) Reset() {
	*x = MsgSwapExactAmountInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSwapExactAmountInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSwapExactAmountInResponse) ProtoMessage() {}

// Deprecated: Use MsgSwapExactAmountInResponse.ProtoReflect.Descriptor instead.
func (*MsgSwapExactAmountInResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgSwapExactAmountInResponse) GetTokenOutAmount() string {
	if x != nil {
		return x.TokenOutAmount
	}
	return ""
}

// ===================== MsgSwapExactAmountOut
type SwapAmountOutRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId       uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	TokenInDenom string `protobuf:"bytes,2,opt,name=token_in_denom,json=tokenInDenom,proto3" json:"token_in_denom,omitempty"`
}

func (x *SwapAmountOutRoute) Reset() {
	*x = SwapAmountOutRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapAmountOutRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapAmountOutRoute) ProtoMessage() {}

// Deprecated: Use SwapAmountOutRoute.ProtoReflect.Descriptor instead.
func (*SwapAmountOutRoute) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{7}
}

func (x *SwapAmountOutRoute) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *SwapAmountOutRoute) GetTokenInDenom() string {
	if x != nil {
		return x.TokenInDenom
	}
	return ""
}

type MsgSwapExactAmountOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender           string                `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Routes           []*SwapAmountOutRoute `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	TokenInMaxAmount string                `protobuf:"bytes,3,opt,name=token_in_max_amount,json=tokenInMaxAmount,proto3" json:"token_in_max_amount,omitempty"`
	TokenOut         *v1beta1.Coin         `protobuf:"bytes,4,opt,name=token_out,json=tokenOut,proto3" json:"token_out,omitempty"`
}

func (x *MsgSwapExactAmountOut) Reset() {
	*x = MsgSwapExactAmountOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSwapExactAmountOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSwapExactAmountOut) ProtoMessage() {}

// Deprecated: Use MsgSwapExactAmountOut.ProtoReflect.Descriptor instead.
func (*MsgSwapExactAmountOut) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgSwapExactAmountOut) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgSwapExactAmountOut) GetRoutes() []*SwapAmountOutRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *MsgSwapExactAmountOut) GetTokenInMaxAmount() string {
	if x != nil {
		return x.TokenInMaxAmount
	}
	return ""
}

func (x *MsgSwapExactAmountOut) GetTokenOut() *v1beta1.Coin {
	if x != nil {
		return x.TokenOut
	}
	return nil
}

type MsgSwapExactAmountOutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenInAmount string `protobuf:"bytes,1,opt,name=token_in_amount,json=tokenInAmount,proto3" json:"token_in_amount,omitempty"`
}

func (x *MsgSwapExactAmountOutResponse) Reset() {
	*x = MsgSwapExactAmountOutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSwapExactAmountOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSwapExactAmountOutResponse) ProtoMessage() {}

// Deprecated: Use MsgSwapExactAmountOutResponse.ProtoReflect.Descriptor instead.
func (*MsgSwapExactAmountOutResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{9}
}

func (x *MsgSwapExactAmountOutResponse) GetTokenInAmount() string {
	if x != nil {
		return x.TokenInAmount
	}
	return ""
}

// ===================== MsgJoinSwapExternAmountIn
// TODO: Rename to MsgJoinSwapExactAmountIn
type MsgJoinSwapExternAmountIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender            string        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	PoolId            uint64        `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	TokenIn           *v1beta1.Coin `protobuf:"bytes,3,opt,name=token_in,json=tokenIn,proto3" json:"token_in,omitempty"`
	ShareOutMinAmount string        `protobuf:"bytes,4,opt,name=share_out_min_amount,json=shareOutMinAmount,proto3" json:"share_out_min_amount,omitempty"`
}

func (x *MsgJoinSwapExternAmountIn) Reset() {
	*x = MsgJoinSwapExternAmountIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgJoinSwapExternAmountIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgJoinSwapExternAmountIn) ProtoMessage() {}

// Deprecated: Use MsgJoinSwapExternAmountIn.ProtoReflect.Descriptor instead.
func (*MsgJoinSwapExternAmountIn) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgJoinSwapExternAmountIn) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgJoinSwapExternAmountIn) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *MsgJoinSwapExternAmountIn) GetTokenIn() *v1beta1.Coin {
	if x != nil {
		return x.TokenIn
	}
	return nil
}

func (x *MsgJoinSwapExternAmountIn) GetShareOutMinAmount() string {
	if x != nil {
		return x.ShareOutMinAmount
	}
	return ""
}

type MsgJoinSwapExternAmountInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareOutAmount string `protobuf:"bytes,1,opt,name=share_out_amount,json=shareOutAmount,proto3" json:"share_out_amount,omitempty"`
}

func (x *MsgJoinSwapExternAmountInResponse) Reset() {
	*x = MsgJoinSwapExternAmountInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgJoinSwapExternAmountInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgJoinSwapExternAmountInResponse) ProtoMessage() {}

// Deprecated: Use MsgJoinSwapExternAmountInResponse.ProtoReflect.Descriptor instead.
func (*MsgJoinSwapExternAmountInResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{11}
}

func (x *MsgJoinSwapExternAmountInResponse) GetShareOutAmount() string {
	if x != nil {
		return x.ShareOutAmount
	}
	return ""
}

// ===================== MsgJoinSwapShareAmountOut
type MsgJoinSwapShareAmountOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender           string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	PoolId           uint64 `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	TokenInDenom     string `protobuf:"bytes,3,opt,name=token_in_denom,json=tokenInDenom,proto3" json:"token_in_denom,omitempty"`
	ShareOutAmount   string `protobuf:"bytes,4,opt,name=share_out_amount,json=shareOutAmount,proto3" json:"share_out_amount,omitempty"`
	TokenInMaxAmount string `protobuf:"bytes,5,opt,name=token_in_max_amount,json=tokenInMaxAmount,proto3" json:"token_in_max_amount,omitempty"`
}

func (x *MsgJoinSwapShareAmountOut) Reset() {
	*x = MsgJoinSwapShareAmountOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgJoinSwapShareAmountOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgJoinSwapShareAmountOut) ProtoMessage() {}

// Deprecated: Use MsgJoinSwapShareAmountOut.ProtoReflect.Descriptor instead.
func (*MsgJoinSwapShareAmountOut) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgJoinSwapShareAmountOut) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgJoinSwapShareAmountOut) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *MsgJoinSwapShareAmountOut) GetTokenInDenom() string {
	if x != nil {
		return x.TokenInDenom
	}
	return ""
}

func (x *MsgJoinSwapShareAmountOut) GetShareOutAmount() string {
	if x != nil {
		return x.ShareOutAmount
	}
	return ""
}

func (x *MsgJoinSwapShareAmountOut) GetTokenInMaxAmount() string {
	if x != nil {
		return x.TokenInMaxAmount
	}
	return ""
}

type MsgJoinSwapShareAmountOutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenInAmount string `protobuf:"bytes,1,opt,name=token_in_amount,json=tokenInAmount,proto3" json:"token_in_amount,omitempty"`
}

func (x *MsgJoinSwapShareAmountOutResponse) Reset() {
	*x = MsgJoinSwapShareAmountOutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgJoinSwapShareAmountOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgJoinSwapShareAmountOutResponse) ProtoMessage() {}

// Deprecated: Use MsgJoinSwapShareAmountOutResponse.ProtoReflect.Descriptor instead.
func (*MsgJoinSwapShareAmountOutResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{13}
}

func (x *MsgJoinSwapShareAmountOutResponse) GetTokenInAmount() string {
	if x != nil {
		return x.TokenInAmount
	}
	return ""
}

// ===================== MsgExitSwapShareAmountIn
type MsgExitSwapShareAmountIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender            string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	PoolId            uint64 `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	TokenOutDenom     string `protobuf:"bytes,3,opt,name=token_out_denom,json=tokenOutDenom,proto3" json:"token_out_denom,omitempty"`
	ShareInAmount     string `protobuf:"bytes,4,opt,name=share_in_amount,json=shareInAmount,proto3" json:"share_in_amount,omitempty"`
	TokenOutMinAmount string `protobuf:"bytes,5,opt,name=token_out_min_amount,json=tokenOutMinAmount,proto3" json:"token_out_min_amount,omitempty"`
}

func (x *MsgExitSwapShareAmountIn) Reset() {
	*x = MsgExitSwapShareAmountIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExitSwapShareAmountIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExitSwapShareAmountIn) ProtoMessage() {}

// Deprecated: Use MsgExitSwapShareAmountIn.ProtoReflect.Descriptor instead.
func (*MsgExitSwapShareAmountIn) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgExitSwapShareAmountIn) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgExitSwapShareAmountIn) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *MsgExitSwapShareAmountIn) GetTokenOutDenom() string {
	if x != nil {
		return x.TokenOutDenom
	}
	return ""
}

func (x *MsgExitSwapShareAmountIn) GetShareInAmount() string {
	if x != nil {
		return x.ShareInAmount
	}
	return ""
}

func (x *MsgExitSwapShareAmountIn) GetTokenOutMinAmount() string {
	if x != nil {
		return x.TokenOutMinAmount
	}
	return ""
}

type MsgExitSwapShareAmountInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenOutAmount string `protobuf:"bytes,1,opt,name=token_out_amount,json=tokenOutAmount,proto3" json:"token_out_amount,omitempty"`
}

func (x *MsgExitSwapShareAmountInResponse) Reset() {
	*x = MsgExitSwapShareAmountInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExitSwapShareAmountInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExitSwapShareAmountInResponse) ProtoMessage() {}

// Deprecated: Use MsgExitSwapShareAmountInResponse.ProtoReflect.Descriptor instead.
func (*MsgExitSwapShareAmountInResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{15}
}

func (x *MsgExitSwapShareAmountInResponse) GetTokenOutAmount() string {
	if x != nil {
		return x.TokenOutAmount
	}
	return ""
}

// ===================== MsgExitSwapExternAmountOut
type MsgExitSwapExternAmountOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender           string        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	PoolId           uint64        `protobuf:"varint,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	TokenOut         *v1beta1.Coin `protobuf:"bytes,3,opt,name=token_out,json=tokenOut,proto3" json:"token_out,omitempty"`
	ShareInMaxAmount string        `protobuf:"bytes,4,opt,name=share_in_max_amount,json=shareInMaxAmount,proto3" json:"share_in_max_amount,omitempty"`
}

func (x *MsgExitSwapExternAmountOut) Reset() {
	*x = MsgExitSwapExternAmountOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExitSwapExternAmountOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExitSwapExternAmountOut) ProtoMessage() {}

// Deprecated: Use MsgExitSwapExternAmountOut.ProtoReflect.Descriptor instead.
func (*MsgExitSwapExternAmountOut) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{16}
}

func (x *MsgExitSwapExternAmountOut) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgExitSwapExternAmountOut) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *MsgExitSwapExternAmountOut) GetTokenOut() *v1beta1.Coin {
	if x != nil {
		return x.TokenOut
	}
	return nil
}

func (x *MsgExitSwapExternAmountOut) GetShareInMaxAmount() string {
	if x != nil {
		return x.ShareInMaxAmount
	}
	return ""
}

type MsgExitSwapExternAmountOutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareInAmount string `protobuf:"bytes,1,opt,name=share_in_amount,json=shareInAmount,proto3" json:"share_in_amount,omitempty"`
}

func (x *MsgExitSwapExternAmountOutResponse) Reset() {
	*x = MsgExitSwapExternAmountOutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_osmosis_gamm_v1beta1_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExitSwapExternAmountOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExitSwapExternAmountOutResponse) ProtoMessage() {}

// Deprecated: Use MsgExitSwapExternAmountOutResponse.ProtoReflect.Descriptor instead.
func (*MsgExitSwapExternAmountOutResponse) Descriptor() ([]byte, []int) {
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP(), []int{17}
}

func (x *MsgExitSwapExternAmountOutResponse) GetShareInAmount() string {
	if x != nil {
		return x.ShareInAmount
	}
	return ""
}

var File_osmosis_gamm_v1beta1_tx_proto protoreflect.FileDescriptor

var file_osmosis_gamm_v1beta1_tx_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2f, 0x67, 0x61, 0x6d, 0x6d, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x14, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x02, 0x0a, 0x0b,
	0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f,
	0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x12, 0x72, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x48, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f,
	0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x22, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x75,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x62, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xf2,
	0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x52, 0x0b,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x61, 0x78, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x13,
	0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x49, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f,
	0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f,
	0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x17, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x0f, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x22, 0x52, 0x07,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x22, 0xbe, 0x02, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x45,
	0x78, 0x69, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12,
	0x70, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x48, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x65, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6d,
	0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x24, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x1c, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x4f, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x73, 0x22, 0x67, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x45,
	0x78, 0x69, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x50, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x18, 0xc8,
	0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x22, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75,
	0x74, 0x22, 0x84, 0x01, 0x0a, 0x11, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75,
	0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xf2,
	0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x4f, 0x75, 0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0xd7, 0x02, 0x0a, 0x14, 0x4d, 0x73, 0x67,
	0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x22, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x42, 0x17, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x22, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x12, 0x7e, 0x0a, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f,
	0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x4d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52,
	0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78,
	0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x49, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f,
	0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f,
	0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x53, 0x77, 0x61,
	0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6f, 0x6c,
	0x5f, 0x69, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22,
	0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0xd9,
	0x02, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x61, 0x63, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61,
	0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x7b, 0x0a, 0x13, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x4d,
	0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x18, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x10,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x22,
	0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x1d, 0x4d,
	0x73, 0x67, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x0f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x48, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52,
	0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc2,
	0x02, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x29, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde,
	0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x42, 0x17, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x22, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x6e, 0x12, 0x7e, 0x0a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x4d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x53,
	0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x49, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa6,
	0x03, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde,
	0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e,
	0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xf2, 0xde,
	0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e,
	0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x73, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x49, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2,
	0xde, 0x1f, 0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x4f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x7b, 0x0a, 0x13, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4c, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x61,
	0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x4a,
	0x6f, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a,
	0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x48, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xa8, 0x03, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x69, 0x74, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x29, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde,
	0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75,
	0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xf2,
	0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x4f, 0x75, 0x74, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x70, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x48, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0d, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x49, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x7e, 0x0a, 0x14, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75,
	0x74, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x20, 0x4d,
	0x73, 0x67, 0x45, 0x78, 0x69, 0x74, 0x53, 0x77, 0x61, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x73, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x49, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x17, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc3, 0x02, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x69, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x18, 0xc8, 0xde, 0x1f, 0x00, 0xf2,
	0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f,
	0x75, 0x74, 0x22, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x7b, 0x0a,
	0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4c, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49,
	0x6e, 0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x22, 0x4d,
	0x73, 0x67, 0x45, 0x78, 0x69, 0x74, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x70, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x48, 0xc8, 0xde, 0x1f, 0x00,
	0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x32, 0xb9, 0x07, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x58, 0x0a, 0x08, 0x4a,
	0x6f, 0x69, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x21, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x1a, 0x29, 0x2e, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x45, 0x78, 0x69, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x12, 0x21, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x69, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x1a, 0x29, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67,
	0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x45,
	0x78, 0x69, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x73, 0x0a, 0x11, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x12, 0x2a, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67,
	0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53,
	0x77, 0x61, 0x70, 0x45, 0x78, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x1a, 0x32, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x77, 0x61, 0x70, 0x45,
	0x78, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x12, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x61, 0x63,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x2b, 0x2e, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x61, 0x63, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a,
	0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x2f, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x1a, 0x37, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x82, 0x01, 0x0a, 0x16, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x2f, 0x2e, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x1a, 0x37, 0x2e,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x77, 0x61, 0x70,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x74, 0x53,
	0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f,
	0x75, 0x74, 0x12, 0x30, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67, 0x61, 0x6d,
	0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x69,
	0x74, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x67,
	0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x45,
	0x78, 0x69, 0x74, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f,
	0x0a, 0x15, 0x45, 0x78, 0x69, 0x74, 0x53, 0x77, 0x61, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x2e, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x45, 0x78, 0x69, 0x74, 0x53, 0x77, 0x61, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x1a, 0x36, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x2e, 0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x45, 0x78, 0x69, 0x74, 0x53, 0x77, 0x61, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0xd8, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e,
	0x67, 0x61, 0x6d, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x07, 0x54, 0x78,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x2f, 0x67, 0x61, 0x6d, 0x6d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x67,
	0x61, 0x6d, 0x6d, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4f, 0x47, 0x58,
	0xaa, 0x02, 0x14, 0x4f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x2e, 0x47, 0x61, 0x6d, 0x6d, 0x2e,
	0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x14, 0x4f, 0x73, 0x6d, 0x6f, 0x73, 0x69,
	0x73, 0x5c, 0x47, 0x61, 0x6d, 0x6d, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02,
	0x20, 0x4f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x5c, 0x47, 0x61, 0x6d, 0x6d, 0x5c, 0x56, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x16, 0x4f, 0x73, 0x6d, 0x6f, 0x73, 0x69, 0x73, 0x3a, 0x3a, 0x47, 0x61, 0x6d,
	0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_osmosis_gamm_v1beta1_tx_proto_rawDescOnce sync.Once
	file_osmosis_gamm_v1beta1_tx_proto_rawDescData = file_osmosis_gamm_v1beta1_tx_proto_rawDesc
)

func file_osmosis_gamm_v1beta1_tx_proto_rawDescGZIP() []byte {
	file_osmosis_gamm_v1beta1_tx_proto_rawDescOnce.Do(func() {
		file_osmosis_gamm_v1beta1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_osmosis_gamm_v1beta1_tx_proto_rawDescData)
	})
	return file_osmosis_gamm_v1beta1_tx_proto_rawDescData
}

var file_osmosis_gamm_v1beta1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_osmosis_gamm_v1beta1_tx_proto_goTypes = []interface{}{
	(*MsgJoinPool)(nil),                        // 0: osmosis.gamm.v1beta1.MsgJoinPool
	(*MsgJoinPoolResponse)(nil),                // 1: osmosis.gamm.v1beta1.MsgJoinPoolResponse
	(*MsgExitPool)(nil),                        // 2: osmosis.gamm.v1beta1.MsgExitPool
	(*MsgExitPoolResponse)(nil),                // 3: osmosis.gamm.v1beta1.MsgExitPoolResponse
	(*SwapAmountInRoute)(nil),                  // 4: osmosis.gamm.v1beta1.SwapAmountInRoute
	(*MsgSwapExactAmountIn)(nil),               // 5: osmosis.gamm.v1beta1.MsgSwapExactAmountIn
	(*MsgSwapExactAmountInResponse)(nil),       // 6: osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse
	(*SwapAmountOutRoute)(nil),                 // 7: osmosis.gamm.v1beta1.SwapAmountOutRoute
	(*MsgSwapExactAmountOut)(nil),              // 8: osmosis.gamm.v1beta1.MsgSwapExactAmountOut
	(*MsgSwapExactAmountOutResponse)(nil),      // 9: osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse
	(*MsgJoinSwapExternAmountIn)(nil),          // 10: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn
	(*MsgJoinSwapExternAmountInResponse)(nil),  // 11: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse
	(*MsgJoinSwapShareAmountOut)(nil),          // 12: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut
	(*MsgJoinSwapShareAmountOutResponse)(nil),  // 13: osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse
	(*MsgExitSwapShareAmountIn)(nil),           // 14: osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn
	(*MsgExitSwapShareAmountInResponse)(nil),   // 15: osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse
	(*MsgExitSwapExternAmountOut)(nil),         // 16: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut
	(*MsgExitSwapExternAmountOutResponse)(nil), // 17: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse
	(*v1beta1.Coin)(nil),                       // 18: cosmos.base.v1beta1.Coin
}
var file_osmosis_gamm_v1beta1_tx_proto_depIdxs = []int32{
	18, // 0: osmosis.gamm.v1beta1.MsgJoinPool.token_in_maxs:type_name -> cosmos.base.v1beta1.Coin
	18, // 1: osmosis.gamm.v1beta1.MsgJoinPoolResponse.token_in:type_name -> cosmos.base.v1beta1.Coin
	18, // 2: osmosis.gamm.v1beta1.MsgExitPool.token_out_mins:type_name -> cosmos.base.v1beta1.Coin
	18, // 3: osmosis.gamm.v1beta1.MsgExitPoolResponse.token_out:type_name -> cosmos.base.v1beta1.Coin
	4,  // 4: osmosis.gamm.v1beta1.MsgSwapExactAmountIn.routes:type_name -> osmosis.gamm.v1beta1.SwapAmountInRoute
	18, // 5: osmosis.gamm.v1beta1.MsgSwapExactAmountIn.token_in:type_name -> cosmos.base.v1beta1.Coin
	7,  // 6: osmosis.gamm.v1beta1.MsgSwapExactAmountOut.routes:type_name -> osmosis.gamm.v1beta1.SwapAmountOutRoute
	18, // 7: osmosis.gamm.v1beta1.MsgSwapExactAmountOut.token_out:type_name -> cosmos.base.v1beta1.Coin
	18, // 8: osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.token_in:type_name -> cosmos.base.v1beta1.Coin
	18, // 9: osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.token_out:type_name -> cosmos.base.v1beta1.Coin
	0,  // 10: osmosis.gamm.v1beta1.Msg.JoinPool:input_type -> osmosis.gamm.v1beta1.MsgJoinPool
	2,  // 11: osmosis.gamm.v1beta1.Msg.ExitPool:input_type -> osmosis.gamm.v1beta1.MsgExitPool
	5,  // 12: osmosis.gamm.v1beta1.Msg.SwapExactAmountIn:input_type -> osmosis.gamm.v1beta1.MsgSwapExactAmountIn
	8,  // 13: osmosis.gamm.v1beta1.Msg.SwapExactAmountOut:input_type -> osmosis.gamm.v1beta1.MsgSwapExactAmountOut
	10, // 14: osmosis.gamm.v1beta1.Msg.JoinSwapExternAmountIn:input_type -> osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn
	12, // 15: osmosis.gamm.v1beta1.Msg.JoinSwapShareAmountOut:input_type -> osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut
	16, // 16: osmosis.gamm.v1beta1.Msg.ExitSwapExternAmountOut:input_type -> osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut
	14, // 17: osmosis.gamm.v1beta1.Msg.ExitSwapShareAmountIn:input_type -> osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn
	1,  // 18: osmosis.gamm.v1beta1.Msg.JoinPool:output_type -> osmosis.gamm.v1beta1.MsgJoinPoolResponse
	3,  // 19: osmosis.gamm.v1beta1.Msg.ExitPool:output_type -> osmosis.gamm.v1beta1.MsgExitPoolResponse
	6,  // 20: osmosis.gamm.v1beta1.Msg.SwapExactAmountIn:output_type -> osmosis.gamm.v1beta1.MsgSwapExactAmountInResponse
	9,  // 21: osmosis.gamm.v1beta1.Msg.SwapExactAmountOut:output_type -> osmosis.gamm.v1beta1.MsgSwapExactAmountOutResponse
	11, // 22: osmosis.gamm.v1beta1.Msg.JoinSwapExternAmountIn:output_type -> osmosis.gamm.v1beta1.MsgJoinSwapExternAmountInResponse
	13, // 23: osmosis.gamm.v1beta1.Msg.JoinSwapShareAmountOut:output_type -> osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOutResponse
	17, // 24: osmosis.gamm.v1beta1.Msg.ExitSwapExternAmountOut:output_type -> osmosis.gamm.v1beta1.MsgExitSwapExternAmountOutResponse
	15, // 25: osmosis.gamm.v1beta1.Msg.ExitSwapShareAmountIn:output_type -> osmosis.gamm.v1beta1.MsgExitSwapShareAmountInResponse
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_osmosis_gamm_v1beta1_tx_proto_init() }
func file_osmosis_gamm_v1beta1_tx_proto_init() {
	if File_osmosis_gamm_v1beta1_tx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgJoinPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgJoinPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExitPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExitPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapAmountInRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSwapExactAmountIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSwapExactAmountInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapAmountOutRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSwapExactAmountOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSwapExactAmountOutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgJoinSwapExternAmountIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgJoinSwapExternAmountInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgJoinSwapShareAmountOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgJoinSwapShareAmountOutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExitSwapShareAmountIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExitSwapShareAmountInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExitSwapExternAmountOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_osmosis_gamm_v1beta1_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExitSwapExternAmountOutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_osmosis_gamm_v1beta1_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_osmosis_gamm_v1beta1_tx_proto_goTypes,
		DependencyIndexes: file_osmosis_gamm_v1beta1_tx_proto_depIdxs,
		MessageInfos:      file_osmosis_gamm_v1beta1_tx_proto_msgTypes,
	}.Build()
	File_osmosis_gamm_v1beta1_tx_proto = out.File
	file_osmosis_gamm_v1beta1_tx_proto_rawDesc = nil
	file_osmosis_gamm_v1beta1_tx_proto_goTypes = nil
	file_osmosis_gamm_v1beta1_tx_proto_depIdxs = nil
}
